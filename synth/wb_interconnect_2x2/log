mkdir -p /project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2/cache/icestorm
make -C /project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2/cache/icestorm -f /project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2/mkdv.mk \
	MKDV_RUNDIR=/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2/rundir \
	MKDV_CACHEDIR=/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2/cache/icestorm \
	build-icestorm || (echo "FAIL: exit status $?" > status.txt; exit 1)
make[1]: Entering directory '/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2/cache/icestorm'
make[1]: Nothing to be done for 'build-icestorm'.
make[1]: Leaving directory '/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2/cache/icestorm'
INCFILES: /project/fun/featherweight-ip/fw-wishbone-interconnect/packages/mkdv/src/mkdv/share/mkfiles/mkdv_ncsim.mk /project/fun/featherweight-ip/fw-wishbone-interconnect/packages/mkdv/src/mkdv/share/mkfiles/mkdv_icestorm.mk /project/fun/featherweight-ip/fw-wishbone-interconnect/packages/mkdv/src/mkdv/share/mkfiles/mkdv_vcs.mk /project/fun/featherweight-ip/fw-wishbone-interconnect/packages/mkdv/src/mkdv/share/mkfiles/mkdv_icarus.mk /project/fun/featherweight-ip/fw-wishbone-interconnect/packages/mkdv/src/mkdv/share/mkfiles/mkdv_cocotb.mk /project/fun/featherweight-ip/fw-wishbone-interconnect/packages/mkdv/src/mkdv/share/mkfiles/mkdv_vlsim.mk /project/fun/featherweight-ip/fw-wishbone-interconnect/packages/mkdv/src/mkdv/share/mkfiles/mkdv_openlane.mk /project/fun/featherweight-ip/fw-wishbone-interconnect/packages/mkdv/src/mkdv/share/mkfiles/mkdv_questa.mk /project/fun/featherweight-ip/fw-wishbone-interconnect/packages/mkdv/src/mkdv/share/mkfiles/mkdv_quartus.mk /project/fun/featherweight-ip/fw-wishbone-interconnect/packages/mkdv/src/mkdv/share/mkfiles/mkdv_sby.mk /project/fun/featherweight-ip/fw-wishbone-interconnect/packages/mkdv/src/mkdv/share/mkfiles/mkdv_pybfms.mk sby questa icestorm vlsim quartus openlane icarus questa icestorm quartus openlane cocotb pybfms
make[1]: Entering directory '/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2/rundir'
echo "" > icestorm-cmds.do
echo "read_verilog -sv \\" >> icestorm-cmds.do
echo "-I/project/fun/featherweight-ip/fw-wishbone-interconnect/packages/fwprotocol-defs/src/sv -I/project/fun/featherweight-ip/fw-wishbone-interconnect/packages/mkdv/src/mkdv/share/mkfiles/../include \\" >> icestorm-cmds.do
echo " \\" >> icestorm-cmds.do
echo "/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v /project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v /project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//wb_interconnect_2x2.v \\" >> icestorm-cmds.do
echo "" >> icestorm-cmds.do
echo "synth_ice40 -top wb_interconnect_2x2 -json wb_interconnect_2x2.json -blif wb_interconnect_2x2.blif" >> icestorm-cmds.do
echo "write_verilog -attr2comment wb_interconnect_2x2_syn.v" >> icestorm-cmds.do
yosys -s icestorm-cmds.do

 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2018  Clifford Wolf <clifford@clifford.at>           |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.8+ (git sha1 81ba464, gcc 7.3.0 -fPIC -Os)


-- Executing script file `icestorm-cmds.do' --

1. Executing Verilog-2005 frontend.
Parsing SystemVerilog input from `/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v' to AST representation.
Generating RTLIL representation for module `\wb_interconnect_NxN'.
Warning: Replacing memory \initiator_active_target with list of registers. See /project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:135
Warning: Replacing memory \target_active_initiator with list of registers. See /project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:116
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend.
Parsing SystemVerilog input from `/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v' to AST representation.
Generating RTLIL representation for module `\wb_interconnect_arb'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend.
Parsing SystemVerilog input from `/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//wb_interconnect_2x2.v' to AST representation.
Generating RTLIL representation for module `\wb_interconnect_2x2'.
Successfully finished Verilog frontend.

4. Executing SYNTH_ICE40 pass.

4.1. Executing Verilog-2005 frontend.
Parsing Verilog input from `/project/tools/edapack/0.0.1/icestorm/0.0.1/icestorm/bin/../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_MAC16'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Successfully finished Verilog frontend.

4.2. Executing HIERARCHY pass (managing design hierarchy).

4.2.1. Analyzing design hierarchy..
Top module:  \wb_interconnect_2x2
Used module:     \wb_interconnect_NxN
Used module:         \wb_interconnect_arb

4.2.2. Executing AST frontend in derive mode using pre-parsed AST for module `\wb_interconnect_arb'.
Parameter \N_REQ = 1
Generating RTLIL representation for module `$paramod\wb_interconnect_arb\N_REQ=1'.

4.2.3. Executing AST frontend in derive mode using pre-parsed AST for module `\wb_interconnect_NxN'.
Parameter \WB_ADDR_WIDTH = 32
Parameter \WB_DATA_WIDTH = 32
Parameter \N_INITIATORS = 2
Parameter \N_TARGETS = 2
Parameter \I_ADR_MASK = 64'1111000000000000000000000000000011110000000000000000000000000000
Parameter \T_ADR = 64'0001000000000000000000000000000010000000000000000000000000000000
Generating RTLIL representation for module `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN'.
Warning: Replacing memory \initiator_active_target with list of registers. See /project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:135
Warning: Replacing memory \target_active_initiator with list of registers. See /project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:116

4.2.4. Analyzing design hierarchy..
Top module:  \wb_interconnect_2x2
Used module:     $paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN
Used module:         \wb_interconnect_arb

4.2.5. Executing AST frontend in derive mode using pre-parsed AST for module `\wb_interconnect_arb'.
Parameter \N_REQ = 2
Generating RTLIL representation for module `$paramod\wb_interconnect_arb\N_REQ=2'.

4.2.6. Executing AST frontend in derive mode using pre-parsed AST for module `\wb_interconnect_arb'.
Parameter \N_REQ = 2
Found cached RTLIL representation for module `$paramod\wb_interconnect_arb\N_REQ=2'.

4.2.7. Analyzing design hierarchy..
Top module:  \wb_interconnect_2x2
Used module:     $paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN
Used module:         $paramod\wb_interconnect_arb\N_REQ=2

4.2.8. Analyzing design hierarchy..
Top module:  \wb_interconnect_2x2
Used module:     $paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN
Used module:         $paramod\wb_interconnect_arb\N_REQ=2
Removing unused module `$paramod\wb_interconnect_arb\N_REQ=1'.
Removing unused module `\wb_interconnect_arb'.
Removing unused module `\wb_interconnect_NxN'.
Removed 3 unused modules.
Warning: Resizing cell port wb_interconnect_2x2.u_ic.we from 22 bits to 2 bits.
Warning: Resizing cell port wb_interconnect_2x2.u_ic.ack from 22 bits to 2 bits.
Warning: Resizing cell port wb_interconnect_2x2.u_ic.stb from 22 bits to 2 bits.
Warning: Resizing cell port wb_interconnect_2x2.u_ic.sel from 88 bits to 8 bits.
Warning: Resizing cell port wb_interconnect_2x2.u_ic.err from 22 bits to 2 bits.
Warning: Resizing cell port wb_interconnect_2x2.u_ic.cyc from 22 bits to 2 bits.
Warning: Resizing cell port wb_interconnect_2x2.u_ic.dat_r from 704 bits to 64 bits.
Warning: Resizing cell port wb_interconnect_2x2.u_ic.dat_w from 704 bits to 64 bits.
Warning: Resizing cell port wb_interconnect_2x2.u_ic.adr from 704 bits to 64 bits.

4.3. Executing PROC pass (convert processes to netlists).

4.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

4.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

4.3.3. Executing PROC_INIT pass (extract init attributes).
Found init rule in `$paramod\wb_interconnect_arb\N_REQ=2.$proc$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v:23$180'.
  Set init value: \last_gnt = 2'00

4.3.4. Executing PROC_ARST pass (detect async resets in processes).

4.3.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.$proc$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:13$146'.
     1/8: $0\initiator_target_sel[1][1:0] [1]
     2/8: $0\target_initiator_sel[0][1:0] [1]
     3/8: $0\initiator_target_sel[1][1:0] [0]
     4/8: $0\target_initiator_sel[1][1:0] [1]
     5/8: $0\initiator_target_sel[0][1:0] [1]
     6/8: $0\target_initiator_sel[0][1:0] [0]
     7/8: $0\initiator_target_sel[0][1:0] [0]
     8/8: $0\target_initiator_sel[1][1:0] [0]
Creating decoders for process `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.$proc$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:192$134'.
     1/9: $2\tsel[7:4]
     2/9: $2\tdat_w[63:32]
     3/9: $2\tadr[63:32]
     4/9: $1\tsel[7:4]
     5/9: $1\tdat_w[63:32]
     6/9: $1\tadr[63:32]
     7/9: $0\tsel[7:4]
     8/9: $0\tdat_w[63:32]
     9/9: $0\tadr[63:32]
Creating decoders for process `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.$proc$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:192$122'.
     1/9: $2\tsel[3:0]
     2/9: $2\tdat_w[31:0]
     3/9: $2\tadr[31:0]
     4/9: $1\tsel[3:0]
     5/9: $1\tdat_w[31:0]
     6/9: $1\tadr[31:0]
     7/9: $0\tsel[3:0]
     8/9: $0\tdat_w[31:0]
     9/9: $0\tadr[31:0]
Creating decoders for process `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.$proc$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:171$116'.
     1/6: $2\ack[1:1]
     2/6: $2\dat_r[63:32]
     3/6: $1\ack[1:1]
     4/6: $1\dat_r[63:32]
     5/6: $0\ack[1:1]
     6/6: $0\dat_r[63:32]
Creating decoders for process `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.$proc$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:171$110'.
     1/6: $2\ack[0:0]
     2/6: $2\dat_r[31:0]
     3/6: $1\ack[0:0]
     4/6: $1\dat_r[31:0]
     5/6: $0\ack[0:0]
     6/6: $0\dat_r[31:0]
Creating decoders for process `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.$proc$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:134$107'.
     1/5: $2\initiator_active_target[1][1:0]
     2/5: $1\initiator_active_target[1][1:0]
     3/5: $0\initiator_active_target[1][1:0]
     4/5: $0$mem2bits$\initiator_target_sel$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:138$81[1:0]$109
     5/5: $0$mem2bits$\initiator_target_sel$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:138$80[1:0]$108
Creating decoders for process `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.$proc$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:134$104'.
     1/5: $2\initiator_active_target[0][1:0]
     2/5: $1\initiator_active_target[0][1:0]
     3/5: $0\initiator_active_target[0][1:0]
     4/5: $0$mem2bits$\initiator_target_sel$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:138$77[1:0]$106
     5/5: $0$mem2bits$\initiator_target_sel$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:138$76[1:0]$105
Creating decoders for process `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.$proc$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:115$101'.
     1/5: $2\target_active_initiator[1][1:0]
     2/5: $1\target_active_initiator[1][1:0]
     3/5: $0\target_active_initiator[1][1:0]
     4/5: $0$mem2bits$\initiator_gnt$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:118$73[1:0]$103
     5/5: $0$mem2bits$\initiator_gnt$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:118$72[1:0]$102
Creating decoders for process `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.$proc$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:115$98'.
     1/5: $2\target_active_initiator[0][1:0]
     2/5: $1\target_active_initiator[0][1:0]
     3/5: $0\target_active_initiator[0][1:0]
     4/5: $0$mem2bits$\initiator_gnt$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:118$69[1:0]$100
     5/5: $0$mem2bits$\initiator_gnt$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:118$68[1:0]$99
Creating decoders for process `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.$proc$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:83$96'.
     1/1: $0$mem2bits$\target_initiator_sel$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:83$65[1:0]$97
Creating decoders for process `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.$proc$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:83$94'.
     1/1: $0$mem2bits$\target_initiator_sel$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:83$64[1:0]$95
Creating decoders for process `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.$proc$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:83$92'.
     1/1: $0$mem2bits$\target_initiator_sel$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:83$63[1:0]$93
Creating decoders for process `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.$proc$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:83$90'.
     1/1: $0$mem2bits$\target_initiator_sel$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:83$62[1:0]$91
Creating decoders for process `$paramod\wb_interconnect_arb\N_REQ=2.$proc$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v:23$180'.
     1/1: $1\last_gnt[1:0]
Creating decoders for process `$paramod\wb_interconnect_arb\N_REQ=2.$proc$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v:106$165'.
     1/2: $0\state[0:0]
     2/2: $0\last_gnt[1:0]

4.3.6. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.\initiator_target_sel[0]' from process `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.$proc$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:13$146'.
No latch inferred for signal `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.\target_initiator_sel[0]' from process `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.$proc$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:13$146'.
No latch inferred for signal `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.\initiator_target_sel[1]' from process `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.$proc$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:13$146'.
No latch inferred for signal `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.\target_initiator_sel[1]' from process `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.$proc$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:13$146'.
No latch inferred for signal `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.\tadr [63:32]' from process `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.$proc$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:192$134'.
No latch inferred for signal `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.\tdat_w [63:32]' from process `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.$proc$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:192$134'.
No latch inferred for signal `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.\tsel [7:4]' from process `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.$proc$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:192$134'.
No latch inferred for signal `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.\tadr [31:0]' from process `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.$proc$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:192$122'.
No latch inferred for signal `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.\tdat_w [31:0]' from process `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.$proc$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:192$122'.
No latch inferred for signal `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.\tsel [3:0]' from process `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.$proc$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:192$122'.
No latch inferred for signal `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.\dat_r [63:32]' from process `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.$proc$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:171$116'.
No latch inferred for signal `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.\ack [1]' from process `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.$proc$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:171$116'.
No latch inferred for signal `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.\dat_r [31:0]' from process `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.$proc$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:171$110'.
No latch inferred for signal `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.\ack [0]' from process `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.$proc$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:171$110'.
No latch inferred for signal `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.$mem2bits$\initiator_target_sel$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:138$80' from process `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.$proc$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:134$107'.
No latch inferred for signal `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.$mem2bits$\initiator_target_sel$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:138$81' from process `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.$proc$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:134$107'.
No latch inferred for signal `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.\initiator_active_target[1]' from process `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.$proc$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:134$107'.
No latch inferred for signal `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.\initiator_active_target[0]' from process `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.$proc$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:134$104'.
No latch inferred for signal `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.$mem2bits$\initiator_target_sel$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:138$76' from process `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.$proc$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:134$104'.
No latch inferred for signal `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.$mem2bits$\initiator_target_sel$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:138$77' from process `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.$proc$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:134$104'.
No latch inferred for signal `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.$mem2bits$\initiator_gnt$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:118$72' from process `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.$proc$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:115$101'.
No latch inferred for signal `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.$mem2bits$\initiator_gnt$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:118$73' from process `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.$proc$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:115$101'.
No latch inferred for signal `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.\target_active_initiator[1]' from process `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.$proc$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:115$101'.
No latch inferred for signal `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.\target_active_initiator[0]' from process `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.$proc$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:115$98'.
No latch inferred for signal `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.$mem2bits$\initiator_gnt$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:118$68' from process `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.$proc$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:115$98'.
No latch inferred for signal `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.$mem2bits$\initiator_gnt$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:118$69' from process `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.$proc$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:115$98'.
No latch inferred for signal `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.$mem2bits$\target_initiator_sel$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:83$65' from process `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.$proc$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:83$96'.
No latch inferred for signal `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.$mem2bits$\target_initiator_sel$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:83$64' from process `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.$proc$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:83$94'.
No latch inferred for signal `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.$mem2bits$\target_initiator_sel$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:83$63' from process `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.$proc$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:83$92'.
No latch inferred for signal `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.$mem2bits$\target_initiator_sel$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:83$62' from process `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.$proc$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:83$90'.

4.3.7. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `$paramod\wb_interconnect_arb\N_REQ=2.\last_gnt' using process `$paramod\wb_interconnect_arb\N_REQ=2.$proc$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v:106$165'.
  created $dff cell `$procdff$283' with positive edge clock.
Creating register for signal `$paramod\wb_interconnect_arb\N_REQ=2.\state' using process `$paramod\wb_interconnect_arb\N_REQ=2.$proc$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v:106$165'.
  created $dff cell `$procdff$284' with positive edge clock.

4.3.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.$proc$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:13$146'.
Found and cleaned up 2 empty switches in `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.$proc$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:192$134'.
Removing empty process `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.$proc$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:192$134'.
Found and cleaned up 2 empty switches in `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.$proc$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:192$122'.
Removing empty process `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.$proc$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:192$122'.
Found and cleaned up 2 empty switches in `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.$proc$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:171$116'.
Removing empty process `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.$proc$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:171$116'.
Found and cleaned up 2 empty switches in `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.$proc$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:171$110'.
Removing empty process `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.$proc$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:171$110'.
Found and cleaned up 2 empty switches in `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.$proc$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:134$107'.
Removing empty process `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.$proc$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:134$107'.
Found and cleaned up 2 empty switches in `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.$proc$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:134$104'.
Removing empty process `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.$proc$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:134$104'.
Found and cleaned up 2 empty switches in `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.$proc$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:115$101'.
Removing empty process `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.$proc$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:115$101'.
Found and cleaned up 2 empty switches in `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.$proc$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:115$98'.
Removing empty process `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.$proc$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:115$98'.
Removing empty process `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.$proc$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:83$96'.
Removing empty process `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.$proc$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:83$94'.
Removing empty process `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.$proc$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:83$92'.
Removing empty process `$paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.$proc$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:83$90'.
Removing empty process `$paramod\wb_interconnect_arb\N_REQ=2.$proc$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v:23$180'.
Found and cleaned up 4 empty switches in `$paramod\wb_interconnect_arb\N_REQ=2.$proc$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v:106$165'.
Removing empty process `$paramod\wb_interconnect_arb\N_REQ=2.$proc$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v:106$165'.
Cleaned up 20 empty switches.

4.4. Executing FLATTEN pass (flatten design).
Mapping wb_interconnect_2x2.u_ic using $paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.
Mapping wb_interconnect_2x2.u_ic.s_arb[1].aw_arb using $paramod\wb_interconnect_arb\N_REQ=2.
Mapping wb_interconnect_2x2.u_ic.s_arb[0].aw_arb using $paramod\wb_interconnect_arb\N_REQ=2.
No more expansions possible.
Deleting now unused module $paramod$07efaca9c75770d37dcb711f2f23e12f605a1e77\wb_interconnect_NxN.
Deleting now unused module $paramod\wb_interconnect_arb\N_REQ=2.

4.5. Executing TRIBUF pass.

4.6. Executing DEMINOUT pass (demote inout ports to input or output).

4.7. Executing SYNTH pass.

4.7.1. Executing PROC pass (convert processes to netlists).

4.7.1.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

4.7.1.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

4.7.1.3. Executing PROC_INIT pass (extract init attributes).

4.7.1.4. Executing PROC_ARST pass (detect async resets in processes).

4.7.1.5. Executing PROC_MUX pass (convert decision trees to multiplexers).

4.7.1.6. Executing PROC_DLATCH pass (convert process syncs to latches).

4.7.1.7. Executing PROC_DFF pass (convert process syncs to FFs).

4.7.1.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

4.7.2. Executing OPT_EXPR pass (perform const folding).
Replacing $and cell `$techmap\u_ic.s_arb[0].aw_arb.$and$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v:85$176' (const_and) in module `\wb_interconnect_2x2' with constant driver `$techmap\u_ic.s_arb[0].aw_arb.$and$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v:85$176_Y = 1'0'.
Replacing $reduce_or cell `$techmap\u_ic.s_arb[0].aw_arb.$reduce_or$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v:85$177' (unary_buffer) in module `\wb_interconnect_2x2' with constant driver `$techmap\u_ic.s_arb[0].aw_arb.$reduce_or$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v:85$177_Y = $techmap\u_ic.s_arb[0].aw_arb.$and$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v:85$176_Y'.
Replacing $not cell `$techmap\u_ic.s_arb[0].aw_arb.$not$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v:85$178' (1'0) in module `\wb_interconnect_2x2' with constant driver `$techmap\u_ic.s_arb[0].aw_arb.$not$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v:85$178_Y = 1'1'.
Replacing $and cell `$techmap\u_ic.s_arb[0].aw_arb.$and$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v:85$179' (and_or_buffer) in module `\wb_interconnect_2x2' with constant driver `$techmap\u_ic.s_arb[0].aw_arb.$and$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v:85$179_Y = $techmap\u_ic.s_arb[0].aw_arb.$and$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v:85$175_Y'.
Replacing $and cell `$techmap\u_ic.s_arb[0].aw_arb.$and$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v:87$174' (const_and) in module `\wb_interconnect_2x2' with constant driver `$techmap\u_ic.s_arb[0].aw_arb.$and$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v:87$174_Y = 1'0'.
Replacing $reduce_or cell `$techmap\u_ic.s_arb[0].aw_arb.$reduce_or$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v:61$171' (and_or_buffer) in module `\wb_interconnect_2x2' with constant driver `$techmap\u_ic.s_arb[0].aw_arb.$reduce_or$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v:61$171_Y = $techmap\u_ic.$logic_and$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:82$154_Y'.
Replacing $reduce_or cell `$techmap\u_ic.s_arb[0].aw_arb.$reduce_or$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v:103$163' (and_or_buffer) in module `\wb_interconnect_2x2' with constant driver `$techmap\u_ic.s_arb[0].aw_arb.$reduce_or$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v:103$163_Y = $techmap\u_ic.s_arb[0].aw_arb.$and$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v:85$175_Y'.
Replacing $and cell `$techmap\u_ic.s_arb[1].aw_arb.$and$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v:85$176' (const_and) in module `\wb_interconnect_2x2' with constant driver `$techmap\u_ic.s_arb[1].aw_arb.$and$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v:85$176_Y = 1'0'.
Replacing $reduce_or cell `$techmap\u_ic.s_arb[1].aw_arb.$reduce_or$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v:85$177' (unary_buffer) in module `\wb_interconnect_2x2' with constant driver `$techmap\u_ic.s_arb[1].aw_arb.$reduce_or$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v:85$177_Y = $techmap\u_ic.s_arb[1].aw_arb.$and$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v:85$176_Y'.
Replacing $not cell `$techmap\u_ic.s_arb[1].aw_arb.$not$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v:85$178' (1'0) in module `\wb_interconnect_2x2' with constant driver `$techmap\u_ic.s_arb[1].aw_arb.$not$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v:85$178_Y = 1'1'.
Replacing $and cell `$techmap\u_ic.s_arb[1].aw_arb.$and$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v:85$179' (and_or_buffer) in module `\wb_interconnect_2x2' with constant driver `$techmap\u_ic.s_arb[1].aw_arb.$and$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v:85$179_Y = $techmap\u_ic.s_arb[1].aw_arb.$and$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v:85$175_Y'.
Replacing $and cell `$techmap\u_ic.s_arb[1].aw_arb.$and$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v:87$174' (const_and) in module `\wb_interconnect_2x2' with constant driver `$techmap\u_ic.s_arb[1].aw_arb.$and$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v:87$174_Y = 1'0'.
Replacing $reduce_or cell `$techmap\u_ic.s_arb[1].aw_arb.$reduce_or$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v:61$171' (and_or_buffer) in module `\wb_interconnect_2x2' with constant driver `$techmap\u_ic.s_arb[1].aw_arb.$reduce_or$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v:61$171_Y = $techmap\u_ic.$logic_and$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:82$150_Y'.
Replacing $reduce_or cell `$techmap\u_ic.s_arb[1].aw_arb.$reduce_or$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v:103$163' (and_or_buffer) in module `\wb_interconnect_2x2' with constant driver `$techmap\u_ic.s_arb[1].aw_arb.$reduce_or$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v:103$163_Y = $techmap\u_ic.s_arb[1].aw_arb.$and$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v:85$175_Y'.
Replacing $eq cell `$techmap\u_ic.$eq$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:175$111' in module `wb_interconnect_2x2' with $logic_not.
Replacing $eq cell `$techmap\u_ic.$eq$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:175$117' in module `wb_interconnect_2x2' with $logic_not.
Replacing $eq cell `$techmap\u_ic.$eq$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:197$123' in module `wb_interconnect_2x2' with $logic_not.
Replacing $eq cell `$techmap\u_ic.$eq$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:197$135' in module `wb_interconnect_2x2' with $logic_not.
Replacing $ne cell `$techmap\u_ic.$ne$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:182$119' (isneq) in module `\wb_interconnect_2x2' with constant driver `$techmap\u_ic.$ne$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:182$119_Y = 1'1'.
Replacing $mux cell `$techmap\u_ic.$ternary$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:183$121' (1) in module `\wb_interconnect_2x2' with constant driver `$techmap\u_ic.$ternary$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:183$121_Y = $techmap\u_ic.$shiftx$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:183$120_Y'.
Replacing $ne cell `$techmap\u_ic.$ne$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:182$113' (isneq) in module `\wb_interconnect_2x2' with constant driver `$techmap\u_ic.$ne$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:182$113_Y = 1'1'.
Replacing $mux cell `$techmap\u_ic.$ternary$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:183$115' (1) in module `\wb_interconnect_2x2' with constant driver `$techmap\u_ic.$ternary$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:183$115_Y = $techmap\u_ic.$shiftx$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:183$114_Y'.
Replacing $eq cell `$techmap\u_ic.s_arb[1].aw_arb.$procmux$279_CMP0' in module `wb_interconnect_2x2' with inverter.
Replacing $eq cell `$techmap\u_ic.s_arb[1].aw_arb.$eq$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v:107$166' (1) in module `\wb_interconnect_2x2' with constant driver `$techmap\u_ic.s_arb[1].aw_arb.$eq$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v:107$166_Y = \u_ic.s_arb[1].aw_arb.reset'.
Replacing $eq cell `$techmap\u_ic.s_arb[1].aw_arb.$procmux$271_CMP0' in module `wb_interconnect_2x2' with inverter.
Replacing $eq cell `$techmap\u_ic.s_arb[1].aw_arb.$eq$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v:122$169' in module `wb_interconnect_2x2' with $logic_not.
Replacing $reduce_or cell `$techmap\u_ic.s_arb[1].aw_arb.$reduce_or$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v:42$170' (and_or_buffer) in module `\wb_interconnect_2x2' with constant driver `$techmap\u_ic.s_arb[1].aw_arb.$reduce_or$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v:42$170_Y = \u_ic.s_arb[1].aw_arb.last_gnt [0]'.
Replacing $eq cell `$techmap\u_ic.s_arb[0].aw_arb.$procmux$279_CMP0' in module `wb_interconnect_2x2' with inverter.
Replacing $eq cell `$techmap\u_ic.s_arb[0].aw_arb.$eq$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v:107$166' (1) in module `\wb_interconnect_2x2' with constant driver `$techmap\u_ic.s_arb[0].aw_arb.$eq$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v:107$166_Y = \u_ic.s_arb[0].aw_arb.reset'.
Replacing $eq cell `$techmap\u_ic.s_arb[0].aw_arb.$procmux$271_CMP0' in module `wb_interconnect_2x2' with inverter.
Replacing $eq cell `$techmap\u_ic.s_arb[0].aw_arb.$eq$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v:122$169' in module `wb_interconnect_2x2' with $logic_not.
Replacing $reduce_or cell `$techmap\u_ic.s_arb[0].aw_arb.$reduce_or$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v:42$170' (and_or_buffer) in module `\wb_interconnect_2x2' with constant driver `$techmap\u_ic.s_arb[0].aw_arb.$reduce_or$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v:42$170_Y = \u_ic.s_arb[0].aw_arb.last_gnt [0]'.
Optimizing away select inverter for $mux cell `$techmap\u_ic.s_arb[1].aw_arb.$procmux$278' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $mux cell `$techmap\u_ic.s_arb[0].aw_arb.$procmux$278' in module `wb_interconnect_2x2'.

4.7.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_interconnect_2x2..
  removing unused `$not' cell `$techmap\u_ic.s_arb[1].aw_arb.$procmux$279_CMP0'.
  removing unused `$not' cell `$techmap\u_ic.s_arb[0].aw_arb.$procmux$279_CMP0'.
  removing unused non-port wire \u_ic.t_ai_ii.
  removing unused non-port wire \u_ic.i_at_ii.
  removing unused non-port wire \u_ic.t2i_ii.
  removing unused non-port wire \u_ic.i2t_mux_ii.
  removed 176 unused temporary wires.
Removed 2 unused cells and 176 unused wires.

4.7.4. Executing CHECK pass (checking for obvious problems).
checking module wb_interconnect_2x2..
found and reported 0 problems.

4.7.5. Executing OPT pass (performing simple optimizations).

4.7.5.1. Executing OPT_EXPR pass (perform const folding).

4.7.5.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_interconnect_2x2'.
  Cell `$techmap\u_ic.$and$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:81$151' is identical to cell `$techmap\u_ic.$and$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:81$147'.
    Redirecting output \Y: $techmap\u_ic.$and$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:81$151_Y = $techmap\u_ic.$and$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:81$147_Y
    Removing $and cell `$techmap\u_ic.$and$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:81$151' from module `\wb_interconnect_2x2'.
  Cell `$techmap\u_ic.$and$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:81$159' is identical to cell `$techmap\u_ic.$and$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:81$155'.
    Redirecting output \Y: $techmap\u_ic.$and$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:81$159_Y = $techmap\u_ic.$and$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:81$155_Y
    Removing $and cell `$techmap\u_ic.$and$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:81$159' from module `\wb_interconnect_2x2'.
  Cell `$techmap\u_ic.$eq$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:229$128' is identical to cell `$techmap\u_ic.$eq$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:221$125'.
    Redirecting output \Y: $techmap\u_ic.$eq$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:229$128_Y = $techmap\u_ic.$eq$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:221$125_Y
    Removing $eq cell `$techmap\u_ic.$eq$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:229$128' from module `\wb_interconnect_2x2'.
  Cell `$techmap\u_ic.$eq$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:229$140' is identical to cell `$techmap\u_ic.$eq$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:221$137'.
    Redirecting output \Y: $techmap\u_ic.$eq$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:229$140_Y = $techmap\u_ic.$eq$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:221$137_Y
    Removing $eq cell `$techmap\u_ic.$eq$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:229$140' from module `\wb_interconnect_2x2'.
  Cell `$techmap\u_ic.$eq$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:232$131' is identical to cell `$techmap\u_ic.$eq$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:221$125'.
    Redirecting output \Y: $techmap\u_ic.$eq$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:232$131_Y = $techmap\u_ic.$eq$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:221$125_Y
    Removing $eq cell `$techmap\u_ic.$eq$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:232$131' from module `\wb_interconnect_2x2'.
  Cell `$techmap\u_ic.$eq$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:232$143' is identical to cell `$techmap\u_ic.$eq$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:221$137'.
    Redirecting output \Y: $techmap\u_ic.$eq$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:232$143_Y = $techmap\u_ic.$eq$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:221$137_Y
    Removing $eq cell `$techmap\u_ic.$eq$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:232$143' from module `\wb_interconnect_2x2'.
  Cell `$techmap\u_ic.$logic_and$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:82$153' is identical to cell `$techmap\u_ic.$logic_and$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:82$149'.
    Redirecting output \Y: $techmap\u_ic.$logic_and$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:82$153_Y = $techmap\u_ic.$logic_and$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:82$149_Y
    Removing $logic_and cell `$techmap\u_ic.$logic_and$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:82$153' from module `\wb_interconnect_2x2'.
  Cell `$techmap\u_ic.$logic_and$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:82$161' is identical to cell `$techmap\u_ic.$logic_and$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:82$157'.
    Redirecting output \Y: $techmap\u_ic.$logic_and$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:82$161_Y = $techmap\u_ic.$logic_and$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:82$157_Y
    Removing $logic_and cell `$techmap\u_ic.$logic_and$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:82$161' from module `\wb_interconnect_2x2'.
Removed a total of 8 cells.

4.7.5.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wb_interconnect_2x2..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $techmap\u_ic.$procmux$182 (pure)
    Root of a mux tree: $techmap\u_ic.$procmux$185 (pure)
    Root of a mux tree: $techmap\u_ic.$procmux$188 (pure)
    Root of a mux tree: $techmap\u_ic.$procmux$200 (pure)
    Root of a mux tree: $techmap\u_ic.$procmux$203 (pure)
    Root of a mux tree: $techmap\u_ic.$procmux$206 (pure)
    Root of a mux tree: $techmap\u_ic.$procmux$218 (pure)
    Root of a mux tree: $techmap\u_ic.$procmux$221 (pure)
    Root of a mux tree: $techmap\u_ic.$procmux$230 (pure)
    Root of a mux tree: $techmap\u_ic.$procmux$233 (pure)
    Root of a mux tree: $techmap\u_ic.$procmux$242 (pure)
    Root of a mux tree: $techmap\u_ic.$procmux$248 (pure)
    Root of a mux tree: $techmap\u_ic.$procmux$254 (pure)
    Root of a mux tree: $techmap\u_ic.$procmux$260 (pure)
    Root of a mux tree: $techmap\u_ic.$ternary$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:222$127 (pure)
    Root of a mux tree: $techmap\u_ic.$ternary$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:222$139 (pure)
    Root of a mux tree: $techmap\u_ic.$ternary$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:230$130 (pure)
    Root of a mux tree: $techmap\u_ic.$ternary$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:230$142 (pure)
    Root of a mux tree: $techmap\u_ic.$ternary$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:233$133 (pure)
    Root of a mux tree: $techmap\u_ic.$ternary$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:233$145 (pure)
    Root of a mux tree: $techmap\u_ic.s_arb[0].aw_arb.$procmux$273 (pure)
      Replacing known input bits on port A of cell $techmap\u_ic.s_arb[0].aw_arb.$procmux$267: \u_ic.s_arb[0].aw_arb.state -> 1'0
      Replacing known input bits on port A of cell $techmap\u_ic.s_arb[0].aw_arb.$procmux$265: \u_ic.s_arb[0].aw_arb.state -> 1'1
      Replacing known input bits on port A of cell $techmap\u_ic.s_arb[0].aw_arb.$procmux$269: \u_ic.s_arb[0].aw_arb.state -> 1'0
    Root of a mux tree: $techmap\u_ic.s_arb[0].aw_arb.$procmux$281 (pure)
    Root of a mux tree: $techmap\u_ic.s_arb[0].aw_arb.$ternary$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v:103$164 (pure)
      Replacing known input bits on port B of cell $techmap\u_ic.s_arb[0].aw_arb.$ternary$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v:103$164: { \u_ic.s_arb[0].aw_arb.masked_gnt [1] 1'0 } -> 2'10
    Root of a mux tree: $techmap\u_ic.s_arb[1].aw_arb.$procmux$273 (pure)
      Replacing known input bits on port A of cell $techmap\u_ic.s_arb[1].aw_arb.$procmux$267: \u_ic.s_arb[1].aw_arb.state -> 1'0
      Replacing known input bits on port A of cell $techmap\u_ic.s_arb[1].aw_arb.$procmux$265: \u_ic.s_arb[1].aw_arb.state -> 1'1
      Replacing known input bits on port A of cell $techmap\u_ic.s_arb[1].aw_arb.$procmux$269: \u_ic.s_arb[1].aw_arb.state -> 1'0
    Root of a mux tree: $techmap\u_ic.s_arb[1].aw_arb.$procmux$281 (pure)
    Root of a mux tree: $techmap\u_ic.s_arb[1].aw_arb.$ternary$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v:103$164 (pure)
      Replacing known input bits on port B of cell $techmap\u_ic.s_arb[1].aw_arb.$ternary$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v:103$164: { \u_ic.s_arb[1].aw_arb.masked_gnt [1] 1'0 } -> 2'10
  Analyzing evaluation results.
Removed 0 multiplexer ports.

4.7.5.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wb_interconnect_2x2.
    New input vector for $reduce_or cell $techmap\u_ic.s_arb[1].aw_arb.$reduce_or$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v:113$167: { \u_ic.s_arb[1].aw_arb.gnt [0] \u_ic.s_arb[1].aw_arb.gnt [1] }
    New input vector for $reduce_or cell $techmap\u_ic.s_arb[0].aw_arb.$reduce_or$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v:113$167: { \u_ic.s_arb[0].aw_arb.gnt [0] \u_ic.s_arb[0].aw_arb.gnt [1] }
  Optimizing cells in module \wb_interconnect_2x2.
Performed a total of 2 changes.

4.7.5.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_interconnect_2x2'.
Removed a total of 0 cells.

4.7.5.6. Executing OPT_RMDFF pass (remove dff with constant values).

4.7.5.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_interconnect_2x2..
  removed 8 unused temporary wires.
Removed 2 unused cells and 184 unused wires.

4.7.5.8. Executing OPT_EXPR pass (perform const folding).

4.7.5.9. Rerunning OPT passes. (Maybe there is more to do..)

4.7.5.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wb_interconnect_2x2..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $techmap\u_ic.$procmux$182 (pure)
    Root of a mux tree: $techmap\u_ic.$procmux$185 (pure)
    Root of a mux tree: $techmap\u_ic.$procmux$188 (pure)
    Root of a mux tree: $techmap\u_ic.$procmux$200 (pure)
    Root of a mux tree: $techmap\u_ic.$procmux$203 (pure)
    Root of a mux tree: $techmap\u_ic.$procmux$206 (pure)
    Root of a mux tree: $techmap\u_ic.$procmux$218 (pure)
    Root of a mux tree: $techmap\u_ic.$procmux$221 (pure)
    Root of a mux tree: $techmap\u_ic.$procmux$230 (pure)
    Root of a mux tree: $techmap\u_ic.$procmux$233 (pure)
    Root of a mux tree: $techmap\u_ic.$procmux$242 (pure)
    Root of a mux tree: $techmap\u_ic.$procmux$248 (pure)
    Root of a mux tree: $techmap\u_ic.$procmux$254 (pure)
    Root of a mux tree: $techmap\u_ic.$procmux$260 (pure)
    Root of a mux tree: $techmap\u_ic.$ternary$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:222$127 (pure)
    Root of a mux tree: $techmap\u_ic.$ternary$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:222$139 (pure)
    Root of a mux tree: $techmap\u_ic.$ternary$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:230$130 (pure)
    Root of a mux tree: $techmap\u_ic.$ternary$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:230$142 (pure)
    Root of a mux tree: $techmap\u_ic.$ternary$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:233$133 (pure)
    Root of a mux tree: $techmap\u_ic.$ternary$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:233$145 (pure)
    Root of a mux tree: $techmap\u_ic.s_arb[0].aw_arb.$procmux$273 (pure)
    Root of a mux tree: $techmap\u_ic.s_arb[0].aw_arb.$procmux$281 (pure)
    Root of a mux tree: $techmap\u_ic.s_arb[0].aw_arb.$ternary$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v:103$164 (pure)
    Root of a mux tree: $techmap\u_ic.s_arb[1].aw_arb.$procmux$273 (pure)
    Root of a mux tree: $techmap\u_ic.s_arb[1].aw_arb.$procmux$281 (pure)
    Root of a mux tree: $techmap\u_ic.s_arb[1].aw_arb.$ternary$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v:103$164 (pure)
  Analyzing evaluation results.
Removed 0 multiplexer ports.

4.7.5.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wb_interconnect_2x2.
Performed a total of 0 changes.

4.7.5.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_interconnect_2x2'.
Removed a total of 0 cells.

4.7.5.13. Executing OPT_RMDFF pass (remove dff with constant values).

4.7.5.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_interconnect_2x2..
Removed 2 unused cells and 184 unused wires.

4.7.5.15. Executing OPT_EXPR pass (perform const folding).

4.7.5.16. Finished OPT passes. (There is nothing left to do.)

4.7.6. Executing WREDUCE pass (reducing word size of cells).
Removed top 3 bits (of 32) from port B of cell wb_interconnect_2x2.$techmap\u_ic.$eq$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:82$160 ($eq).
Removed top 3 bits (of 32) from port B of cell wb_interconnect_2x2.$techmap\u_ic.$eq$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:82$152 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_interconnect_2x2.$techmap\u_ic.$eq$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:197$136 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_interconnect_2x2.$techmap\u_ic.$eq$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:197$124 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_interconnect_2x2.$techmap\u_ic.$eq$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:175$118 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_interconnect_2x2.$techmap\u_ic.$eq$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:175$112 ($eq).
Removed top 30 bits (of 32) from port Y of cell wb_interconnect_2x2.$techmap\u_ic.s_arb[1].aw_arb.$and$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v:122$168 ($and).
Removed top 30 bits (of 32) from port Y of cell wb_interconnect_2x2.$techmap\u_ic.s_arb[0].aw_arb.$and$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v:122$168 ($and).
Removed top 30 bits (of 32) from wire wb_interconnect_2x2.$techmap\u_ic.s_arb[0].aw_arb.$and$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v:122$168_Y.
Removed top 30 bits (of 32) from wire wb_interconnect_2x2.$techmap\u_ic.s_arb[1].aw_arb.$and$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v:122$168_Y.

4.7.7. Executing TECHMAP pass (map to technology primitives).

4.7.7.1. Executing Verilog-2005 frontend.
Parsing Verilog input from `/project/tools/edapack/0.0.1/icestorm/0.0.1/icestorm/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

4.7.7.2. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_lut_cmp_'.
Parameter \A_SIGNED = 0
Parameter \B_SIGNED = 0
Parameter \A_WIDTH = 32
Parameter \B_WIDTH = 29
Parameter \Y_WIDTH = 1
Parameter \_TECHMAP_CELLTYPE_ = 24'001001000110010101110001
Parameter \_TECHMAP_CONSTMSK_A_ = 0
Parameter \_TECHMAP_CONSTVAL_A_ = 32'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
Parameter \_TECHMAP_CONSTMSK_B_ = 29'11111111111111111111111111111
Parameter \_TECHMAP_CONSTVAL_B_ = 29'10000000000000000000000000000
Generating RTLIL representation for module `$paramod$ad33d4ac6bb20d19a2bf2873c581fe4444d48e38\_90_lut_cmp_'.
Not using module `$paramod$ad33d4ac6bb20d19a2bf2873c581fe4444d48e38\_90_lut_cmp_' from techmap as it contains a _TECHMAP_FAIL_ marker wire with non-zero value 1'1.

4.7.7.3. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_lut_cmp_'.
Parameter \A_SIGNED = 0
Parameter \B_SIGNED = 0
Parameter \A_WIDTH = 32
Parameter \B_WIDTH = 32
Parameter \Y_WIDTH = 1
Parameter \_TECHMAP_CELLTYPE_ = 24'001001000110010101110001
Parameter \_TECHMAP_CONSTMSK_A_ = 0
Parameter \_TECHMAP_CONSTVAL_A_ = 32'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
Parameter \_TECHMAP_CONSTMSK_B_ = 32'11111111111111111111111111111111
Parameter \_TECHMAP_CONSTVAL_B_ = 32'10000000000000000000000000000000
Generating RTLIL representation for module `$paramod$16155d9667e7073212331dd9a91b21b1a72ac43c\_90_lut_cmp_'.
Not using module `$paramod$16155d9667e7073212331dd9a91b21b1a72ac43c\_90_lut_cmp_' from techmap as it contains a _TECHMAP_FAIL_ marker wire with non-zero value 1'1.

4.7.7.4. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_lut_cmp_'.
Parameter \A_SIGNED = 0
Parameter \B_SIGNED = 0
Parameter \A_WIDTH = 2
Parameter \B_WIDTH = 2
Parameter \Y_WIDTH = 1
Parameter \_TECHMAP_CELLTYPE_ = 24'001001000110010101110001
Parameter \_TECHMAP_CONSTMSK_A_ = 2'00
Parameter \_TECHMAP_CONSTVAL_A_ = 2'xx
Parameter \_TECHMAP_CONSTMSK_B_ = 2'11
Parameter \_TECHMAP_CONSTVAL_B_ = 2'11
Generating RTLIL representation for module `$paramod$0760830c1e6c196382cd2cb153e9fff2d84c061d\_90_lut_cmp_'.

4.7.7.5. Continuing TECHMAP pass.
Mapping wb_interconnect_2x2.$techmap\u_ic.$eq$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:221$137 using $paramod$0760830c1e6c196382cd2cb153e9fff2d84c061d\_90_lut_cmp_.

4.7.7.6. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_lut_cmp_'.
Parameter \A_SIGNED = 0
Parameter \B_SIGNED = 0
Parameter \A_WIDTH = 2
Parameter \B_WIDTH = 1
Parameter \Y_WIDTH = 1
Parameter \_TECHMAP_CELLTYPE_ = 24'001001000110010101110001
Parameter \_TECHMAP_CONSTMSK_A_ = 2'00
Parameter \_TECHMAP_CONSTVAL_A_ = 2'xx
Parameter \_TECHMAP_CONSTMSK_B_ = 1'1
Parameter \_TECHMAP_CONSTVAL_B_ = 1'1
Generating RTLIL representation for module `$paramod$6816abac91a51b405c3de5bceb2855c03dd44485\_90_lut_cmp_'.

4.7.7.7. Continuing TECHMAP pass.
Mapping wb_interconnect_2x2.$techmap\u_ic.$eq$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:197$136 using $paramod$6816abac91a51b405c3de5bceb2855c03dd44485\_90_lut_cmp_.
Mapping wb_interconnect_2x2.$techmap\u_ic.$eq$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:221$125 using $paramod$0760830c1e6c196382cd2cb153e9fff2d84c061d\_90_lut_cmp_.
Mapping wb_interconnect_2x2.$techmap\u_ic.$eq$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:197$124 using $paramod$6816abac91a51b405c3de5bceb2855c03dd44485\_90_lut_cmp_.
Mapping wb_interconnect_2x2.$techmap\u_ic.$eq$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:175$118 using $paramod$6816abac91a51b405c3de5bceb2855c03dd44485\_90_lut_cmp_.
Mapping wb_interconnect_2x2.$techmap\u_ic.$eq$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:175$112 using $paramod$6816abac91a51b405c3de5bceb2855c03dd44485\_90_lut_cmp_.
No more expansions possible.

4.7.8. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module wb_interconnect_2x2:
  created 0 $alu and 0 $macc cells.

4.7.9. Executing SHARE pass (SAT-based resource sharing).

4.7.10. Executing OPT pass (performing simple optimizations).

4.7.10.1. Executing OPT_EXPR pass (perform const folding).

4.7.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_interconnect_2x2'.
Removed a total of 0 cells.

4.7.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wb_interconnect_2x2..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $techmap\u_ic.$procmux$182 (pure)
    Root of a mux tree: $techmap\u_ic.$procmux$185 (pure)
    Root of a mux tree: $techmap\u_ic.$procmux$188 (pure)
    Root of a mux tree: $techmap\u_ic.$procmux$200 (pure)
    Root of a mux tree: $techmap\u_ic.$procmux$203 (pure)
    Root of a mux tree: $techmap\u_ic.$procmux$206 (pure)
    Root of a mux tree: $techmap\u_ic.$procmux$218 (pure)
    Root of a mux tree: $techmap\u_ic.$procmux$221 (pure)
    Root of a mux tree: $techmap\u_ic.$procmux$230 (pure)
    Root of a mux tree: $techmap\u_ic.$procmux$233 (pure)
    Root of a mux tree: $techmap\u_ic.$procmux$242 (pure)
    Root of a mux tree: $techmap\u_ic.$procmux$248 (pure)
    Root of a mux tree: $techmap\u_ic.$procmux$254 (pure)
    Root of a mux tree: $techmap\u_ic.$procmux$260 (pure)
    Root of a mux tree: $techmap\u_ic.$ternary$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:222$127 (pure)
    Root of a mux tree: $techmap\u_ic.$ternary$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:222$139 (pure)
    Root of a mux tree: $techmap\u_ic.$ternary$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:230$130 (pure)
    Root of a mux tree: $techmap\u_ic.$ternary$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:230$142 (pure)
    Root of a mux tree: $techmap\u_ic.$ternary$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:233$133 (pure)
    Root of a mux tree: $techmap\u_ic.$ternary$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:233$145 (pure)
    Root of a mux tree: $techmap\u_ic.s_arb[0].aw_arb.$procmux$273 (pure)
    Root of a mux tree: $techmap\u_ic.s_arb[0].aw_arb.$procmux$281 (pure)
    Root of a mux tree: $techmap\u_ic.s_arb[0].aw_arb.$ternary$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v:103$164 (pure)
    Root of a mux tree: $techmap\u_ic.s_arb[1].aw_arb.$procmux$273 (pure)
    Root of a mux tree: $techmap\u_ic.s_arb[1].aw_arb.$procmux$281 (pure)
    Root of a mux tree: $techmap\u_ic.s_arb[1].aw_arb.$ternary$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v:103$164 (pure)
  Analyzing evaluation results.
Removed 0 multiplexer ports.

4.7.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wb_interconnect_2x2.
Performed a total of 0 changes.

4.7.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_interconnect_2x2'.
Removed a total of 0 cells.

4.7.10.6. Executing OPT_RMDFF pass (remove dff with constant values).

4.7.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_interconnect_2x2..
  removed 20 unused temporary wires.
Removed 2 unused cells and 204 unused wires.

4.7.10.8. Executing OPT_EXPR pass (perform const folding).

4.7.10.9. Finished OPT passes. (There is nothing left to do.)

4.7.11. Executing FSM pass (extract and optimize FSM).

4.7.11.1. Executing FSM_DETECT pass (finding FSMs in design).

4.7.11.2. Executing FSM_EXTRACT pass (extracting FSM from design).

4.7.11.3. Executing FSM_OPT pass (simple optimizations of FSMs).

4.7.11.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_interconnect_2x2..
Removed 2 unused cells and 204 unused wires.

4.7.11.5. Executing FSM_OPT pass (simple optimizations of FSMs).

4.7.11.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

4.7.11.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

4.7.11.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

4.7.12. Executing OPT pass (performing simple optimizations).

4.7.12.1. Executing OPT_EXPR pass (perform const folding).

4.7.12.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_interconnect_2x2'.
Removed a total of 0 cells.

4.7.12.3. Executing OPT_RMDFF pass (remove dff with constant values).

4.7.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_interconnect_2x2..
Removed 2 unused cells and 204 unused wires.

4.7.12.5. Finished fast OPT passes.

4.7.13. Executing MEMORY pass.

4.7.13.1. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).

4.7.13.2. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_interconnect_2x2..
Removed 2 unused cells and 204 unused wires.

4.7.13.3. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

4.7.13.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_interconnect_2x2..
Removed 2 unused cells and 204 unused wires.

4.7.13.5. Executing MEMORY_COLLECT pass (generating $mem cells).

4.7.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_interconnect_2x2..
Removed 2 unused cells and 204 unused wires.

4.8. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).

4.9. Executing TECHMAP pass (map to technology primitives).

4.9.1. Executing Verilog-2005 frontend.
Parsing Verilog input from `/project/tools/edapack/0.0.1/icestorm/0.0.1/icestorm/bin/../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M0'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M123'.
Successfully finished Verilog frontend.
No more expansions possible.

4.10. Executing OPT pass (performing simple optimizations).

4.10.1. Executing OPT_EXPR pass (perform const folding).
Replacing $and cell `$techmap\u_ic.$and$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:81$147' in module `wb_interconnect_2x2' with cells using grouped bits:
  New cell `$auto$opt_expr.cc:158:group_cell_inputs$299': A=4'1111, B=\adr [31:28]
  New cell `$auto$opt_expr.cc:158:group_cell_inputs$301': A=1'0, B=1'0
Replacing $and cell `$techmap\u_ic.$and$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:81$155' in module `wb_interconnect_2x2' with cells using grouped bits:
  New cell `$auto$opt_expr.cc:158:group_cell_inputs$303': A=4'1111, B=\adr [63:60]
  New cell `$auto$opt_expr.cc:158:group_cell_inputs$305': A=1'0, B=1'0
Replacing $mux cell `$techmap\u_ic.s_arb[1].aw_arb.$procmux$269' (mux_sel01) in module `\wb_interconnect_2x2' with constant driver `$techmap\u_ic.s_arb[1].aw_arb.$procmux$269_Y = $techmap\u_ic.s_arb[1].aw_arb.$procmux$270_CMP'.
Replacing port A of $logic_not cell `$techmap\u_ic.s_arb[1].aw_arb.$eq$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v:122$169' in module `\wb_interconnect_2x2' with shorter expression: { 30'000000000000000000000000000000 $auto$wreduce.cc:350:run$286 [1:0] } -> $auto$wreduce.cc:350:run$286 [1:0]
Replacing $mux cell `$techmap\u_ic.s_arb[0].aw_arb.$procmux$269' (mux_sel01) in module `\wb_interconnect_2x2' with constant driver `$techmap\u_ic.s_arb[0].aw_arb.$procmux$269_Y = $techmap\u_ic.s_arb[0].aw_arb.$procmux$270_CMP'.
Replacing port A of $logic_not cell `$techmap\u_ic.s_arb[0].aw_arb.$eq$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v:122$169' in module `\wb_interconnect_2x2' with shorter expression: { 30'000000000000000000000000000000 $auto$wreduce.cc:350:run$285 [1:0] } -> $auto$wreduce.cc:350:run$285 [1:0]
Replacing $and cell `$auto$opt_expr.cc:158:group_cell_inputs$301' (const_and) in module `\wb_interconnect_2x2' with constant driver `$auto$opt_expr.cc:145:group_cell_inputs$300 = 1'0'.
Removed 27 redundant input bits from $eq cell `$techmap\u_ic.$eq$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:82$152' in module `wb_interconnect_2x2'.
Replacing $and cell `$auto$opt_expr.cc:158:group_cell_inputs$305' (const_and) in module `\wb_interconnect_2x2' with constant driver `$auto$opt_expr.cc:145:group_cell_inputs$304 = 1'0'.
Removed 27 redundant input bits from $eq cell `$techmap\u_ic.$eq$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:82$160' in module `wb_interconnect_2x2'.
Removed 27 redundant input bits from $eq cell `$techmap\u_ic.$eq$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:82$148' in module `wb_interconnect_2x2'.
Removed 27 redundant input bits from $eq cell `$techmap\u_ic.$eq$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:82$156' in module `wb_interconnect_2x2'.

4.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_interconnect_2x2'.
Removed a total of 0 cells.

4.10.3. Executing OPT_RMDFF pass (remove dff with constant values).

4.10.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_interconnect_2x2..
  removed 6 unused temporary wires.
Removed 2 unused cells and 210 unused wires.

4.10.5. Finished fast OPT passes.

4.11. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).

4.12. Executing OPT pass (performing simple optimizations).

4.12.1. Executing OPT_EXPR pass (perform const folding).

4.12.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_interconnect_2x2'.
Removed a total of 0 cells.

4.12.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wb_interconnect_2x2..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $techmap\u_ic.$procmux$182 (pure)
    Root of a mux tree: $techmap\u_ic.$procmux$185 (pure)
    Root of a mux tree: $techmap\u_ic.$procmux$188 (pure)
    Root of a mux tree: $techmap\u_ic.$procmux$200 (pure)
    Root of a mux tree: $techmap\u_ic.$procmux$203 (pure)
    Root of a mux tree: $techmap\u_ic.$procmux$206 (pure)
    Root of a mux tree: $techmap\u_ic.$procmux$218 (pure)
    Root of a mux tree: $techmap\u_ic.$procmux$221 (pure)
    Root of a mux tree: $techmap\u_ic.$procmux$230 (pure)
    Root of a mux tree: $techmap\u_ic.$procmux$233 (pure)
    Root of a mux tree: $techmap\u_ic.$procmux$242 (pure)
    Root of a mux tree: $techmap\u_ic.$procmux$248 (pure)
    Root of a mux tree: $techmap\u_ic.$procmux$254 (pure)
    Root of a mux tree: $techmap\u_ic.$procmux$260 (pure)
    Root of a mux tree: $techmap\u_ic.$ternary$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:222$127 (pure)
    Root of a mux tree: $techmap\u_ic.$ternary$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:222$139 (pure)
    Root of a mux tree: $techmap\u_ic.$ternary$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:230$130 (pure)
    Root of a mux tree: $techmap\u_ic.$ternary$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:230$142 (pure)
    Root of a mux tree: $techmap\u_ic.$ternary$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:233$133 (pure)
    Root of a mux tree: $techmap\u_ic.$ternary$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:233$145 (pure)
    Root of a mux tree: $techmap\u_ic.s_arb[0].aw_arb.$procmux$273 (pure)
    Root of a mux tree: $techmap\u_ic.s_arb[0].aw_arb.$procmux$281 (pure)
    Root of a mux tree: $techmap\u_ic.s_arb[0].aw_arb.$ternary$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v:103$164 (pure)
    Root of a mux tree: $techmap\u_ic.s_arb[1].aw_arb.$procmux$273 (pure)
    Root of a mux tree: $techmap\u_ic.s_arb[1].aw_arb.$procmux$281 (pure)
    Root of a mux tree: $techmap\u_ic.s_arb[1].aw_arb.$ternary$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v:103$164 (pure)
  Analyzing evaluation results.
Removed 0 multiplexer ports.

4.12.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wb_interconnect_2x2.
    Consolidated identical input bits for $mux cell $techmap\u_ic.$procmux$245:
      Old ports: A=2'11, B=2'00, Y=$techmap\u_ic.$1\initiator_active_target[1][1:0]
      New ports: A=1'1, B=1'0, Y=$techmap\u_ic.$1\initiator_active_target[1][1:0] [0]
      New connections: $techmap\u_ic.$1\initiator_active_target[1][1:0] [1] = $techmap\u_ic.$1\initiator_active_target[1][1:0] [0]
    Consolidated identical input bits for $mux cell $techmap\u_ic.$procmux$251:
      Old ports: A=2'11, B=2'00, Y=$techmap\u_ic.$1\initiator_active_target[0][1:0]
      New ports: A=1'1, B=1'0, Y=$techmap\u_ic.$1\initiator_active_target[0][1:0] [0]
      New connections: $techmap\u_ic.$1\initiator_active_target[0][1:0] [1] = $techmap\u_ic.$1\initiator_active_target[0][1:0] [0]
    Consolidated identical input bits for $mux cell $techmap\u_ic.$procmux$257:
      Old ports: A=2'11, B=2'00, Y=$techmap\u_ic.$1\target_active_initiator[1][1:0]
      New ports: A=1'1, B=1'0, Y=$techmap\u_ic.$1\target_active_initiator[1][1:0] [0]
      New connections: $techmap\u_ic.$1\target_active_initiator[1][1:0] [1] = $techmap\u_ic.$1\target_active_initiator[1][1:0] [0]
    Consolidated identical input bits for $mux cell $techmap\u_ic.$procmux$263:
      Old ports: A=2'11, B=2'00, Y=$techmap\u_ic.$1\target_active_initiator[0][1:0]
      New ports: A=1'1, B=1'0, Y=$techmap\u_ic.$1\target_active_initiator[0][1:0] [0]
      New connections: $techmap\u_ic.$1\target_active_initiator[0][1:0] [1] = $techmap\u_ic.$1\target_active_initiator[0][1:0] [0]
  Optimizing cells in module \wb_interconnect_2x2.
Performed a total of 4 changes.

4.12.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_interconnect_2x2'.
Removed a total of 0 cells.

4.12.6. Executing OPT_RMDFF pass (remove dff with constant values).

4.12.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_interconnect_2x2..
Removed 2 unused cells and 210 unused wires.

4.12.8. Executing OPT_EXPR pass (perform const folding).

4.12.9. Rerunning OPT passes. (Maybe there is more to do..)

4.12.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wb_interconnect_2x2..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $techmap\u_ic.$procmux$182 (pure)
    Root of a mux tree: $techmap\u_ic.$procmux$185 (pure)
    Root of a mux tree: $techmap\u_ic.$procmux$188 (pure)
    Root of a mux tree: $techmap\u_ic.$procmux$200 (pure)
    Root of a mux tree: $techmap\u_ic.$procmux$203 (pure)
    Root of a mux tree: $techmap\u_ic.$procmux$206 (pure)
    Root of a mux tree: $techmap\u_ic.$procmux$218 (pure)
    Root of a mux tree: $techmap\u_ic.$procmux$221 (pure)
    Root of a mux tree: $techmap\u_ic.$procmux$230 (pure)
    Root of a mux tree: $techmap\u_ic.$procmux$233 (pure)
    Root of a mux tree: $techmap\u_ic.$procmux$242 (pure)
    Root of a mux tree: $techmap\u_ic.$procmux$248 (pure)
    Root of a mux tree: $techmap\u_ic.$procmux$254 (pure)
    Root of a mux tree: $techmap\u_ic.$procmux$260 (pure)
    Root of a mux tree: $techmap\u_ic.$ternary$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:222$127 (pure)
    Root of a mux tree: $techmap\u_ic.$ternary$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:222$139 (pure)
    Root of a mux tree: $techmap\u_ic.$ternary$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:230$130 (pure)
    Root of a mux tree: $techmap\u_ic.$ternary$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:230$142 (pure)
    Root of a mux tree: $techmap\u_ic.$ternary$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:233$133 (pure)
    Root of a mux tree: $techmap\u_ic.$ternary$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:233$145 (pure)
    Root of a mux tree: $techmap\u_ic.s_arb[0].aw_arb.$procmux$273 (pure)
    Root of a mux tree: $techmap\u_ic.s_arb[0].aw_arb.$procmux$281 (pure)
    Root of a mux tree: $techmap\u_ic.s_arb[0].aw_arb.$ternary$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v:103$164 (pure)
    Root of a mux tree: $techmap\u_ic.s_arb[1].aw_arb.$procmux$273 (pure)
    Root of a mux tree: $techmap\u_ic.s_arb[1].aw_arb.$procmux$281 (pure)
    Root of a mux tree: $techmap\u_ic.s_arb[1].aw_arb.$ternary$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v:103$164 (pure)
  Analyzing evaluation results.
Removed 0 multiplexer ports.

4.12.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wb_interconnect_2x2.
Performed a total of 0 changes.

4.12.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_interconnect_2x2'.
Removed a total of 0 cells.

4.12.13. Executing OPT_RMDFF pass (remove dff with constant values).

4.12.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_interconnect_2x2..
Removed 2 unused cells and 210 unused wires.

4.12.15. Executing OPT_EXPR pass (perform const folding).

4.12.16. Finished OPT passes. (There is nothing left to do.)

4.13. Executing TECHMAP pass (map to technology primitives).

4.13.1. Executing Verilog-2005 frontend.
Parsing Verilog input from `/project/tools/edapack/0.0.1/icestorm/0.0.1/icestorm/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

4.13.2. Executing Verilog-2005 frontend.
Parsing Verilog input from `/project/tools/edapack/0.0.1/icestorm/0.0.1/icestorm/bin/../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.
Mapping wb_interconnect_2x2.$auto$opt_expr.cc:158:group_cell_inputs$303 ($and) with simplemap.
Mapping wb_interconnect_2x2.$techmap\u_ic.$procmux$260 ($mux) with simplemap.
Mapping wb_interconnect_2x2.$techmap\u_ic.$procmux$263 ($mux) with simplemap.
Mapping wb_interconnect_2x2.$techmap\u_ic.$procmux$257 ($mux) with simplemap.
Mapping wb_interconnect_2x2.$techmap\u_ic.$procmux$254 ($mux) with simplemap.
Mapping wb_interconnect_2x2.$techmap\u_ic.$procmux$251 ($mux) with simplemap.
Mapping wb_interconnect_2x2.$techmap\u_ic.$procmux$248 ($mux) with simplemap.
Mapping wb_interconnect_2x2.$techmap\u_ic.$procmux$245 ($mux) with simplemap.
Mapping wb_interconnect_2x2.$techmap\u_ic.$procmux$242 ($mux) with simplemap.
Mapping wb_interconnect_2x2.$techmap\u_ic.$procmux$239 ($mux) with simplemap.
Mapping wb_interconnect_2x2.$techmap\u_ic.$procmux$236 ($mux) with simplemap.
Mapping wb_interconnect_2x2.$techmap\u_ic.$procmux$233 ($mux) with simplemap.
Mapping wb_interconnect_2x2.$techmap\u_ic.$procmux$230 ($mux) with simplemap.
Mapping wb_interconnect_2x2.$techmap\u_ic.$procmux$227 ($mux) with simplemap.
Mapping wb_interconnect_2x2.$techmap\u_ic.$procmux$224 ($mux) with simplemap.
Mapping wb_interconnect_2x2.$techmap\u_ic.$procmux$221 ($mux) with simplemap.
Mapping wb_interconnect_2x2.$techmap\u_ic.$procmux$218 ($mux) with simplemap.
Mapping wb_interconnect_2x2.$techmap\u_ic.$procmux$215 ($mux) with simplemap.
Mapping wb_interconnect_2x2.$techmap\u_ic.$procmux$212 ($mux) with simplemap.
Mapping wb_interconnect_2x2.$techmap\u_ic.$procmux$209 ($mux) with simplemap.
Mapping wb_interconnect_2x2.$techmap\u_ic.$procmux$206 ($mux) with simplemap.
Mapping wb_interconnect_2x2.$techmap\u_ic.$procmux$203 ($mux) with simplemap.
Mapping wb_interconnect_2x2.$techmap\u_ic.$procmux$200 ($mux) with simplemap.
Mapping wb_interconnect_2x2.$techmap\u_ic.$procmux$197 ($mux) with simplemap.
Mapping wb_interconnect_2x2.$techmap\u_ic.$procmux$194 ($mux) with simplemap.
Mapping wb_interconnect_2x2.$techmap\u_ic.$procmux$191 ($mux) with simplemap.
Mapping wb_interconnect_2x2.$techmap\u_ic.$procmux$188 ($mux) with simplemap.
Mapping wb_interconnect_2x2.$techmap\u_ic.$procmux$185 ($mux) with simplemap.
Mapping wb_interconnect_2x2.$techmap\u_ic.$procmux$182 ($mux) with simplemap.
Mapping wb_interconnect_2x2.$techmap\u_ic.$logic_and$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:82$162 ($logic_and) with simplemap.
Mapping wb_interconnect_2x2.$techmap\u_ic.$eq$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:82$160 ($eq) with simplemap.
Mapping wb_interconnect_2x2.$techmap\u_ic.$logic_and$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:82$158 ($logic_and) with simplemap.
Mapping wb_interconnect_2x2.$techmap\u_ic.$logic_and$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:82$157 ($logic_and) with simplemap.
Mapping wb_interconnect_2x2.$techmap\u_ic.$eq$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:82$156 ($eq) with simplemap.
Mapping wb_interconnect_2x2.$techmap\u_ic.$logic_and$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:82$154 ($logic_and) with simplemap.
Mapping wb_interconnect_2x2.$auto$opt_expr.cc:158:group_cell_inputs$299 ($and) with simplemap.
Mapping wb_interconnect_2x2.$techmap\u_ic.$eq$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:82$152 ($eq) with simplemap.
Mapping wb_interconnect_2x2.$techmap\u_ic.$logic_and$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:82$150 ($logic_and) with simplemap.
Mapping wb_interconnect_2x2.$techmap\u_ic.$logic_and$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:82$149 ($logic_and) with simplemap.
Mapping wb_interconnect_2x2.$techmap\u_ic.$eq$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:82$148 ($eq) with simplemap.
Mapping wb_interconnect_2x2.$techmap\u_ic.$ternary$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:233$145 ($mux) with simplemap.

4.13.3. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_shift_shiftx'.
Parameter \A_SIGNED = 0
Parameter \B_SIGNED = 0
Parameter \A_WIDTH = 2
Parameter \B_WIDTH = 2
Parameter \Y_WIDTH = 1
Parameter \_TECHMAP_CELLTYPE_ = 56'00100100011100110110100001101001011001100111010001111000
Generating RTLIL representation for module `$paramod$4f3012f00d814c8e8facef5376cedcd50b18e864\_90_shift_shiftx'.

4.13.4. Executing PROC pass (convert processes to netlists).

4.13.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 5 empty switches in `$paramod$4f3012f00d814c8e8facef5376cedcd50b18e864\_90_shift_shiftx.$proc$/project/tools/edapack/0.0.1/icestorm/0.0.1/icestorm/bin/../share/yosys/techmap.v:145$846'.
Cleaned up 5 empty switches.

4.13.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

4.13.4.3. Executing PROC_INIT pass (extract init attributes).

4.13.4.4. Executing PROC_ARST pass (detect async resets in processes).

4.13.4.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod$4f3012f00d814c8e8facef5376cedcd50b18e864\_90_shift_shiftx.$proc$/project/tools/edapack/0.0.1/icestorm/0.0.1/icestorm/bin/../share/yosys/techmap.v:145$846'.
     1/8: $6\buffer[1:0]
     2/8: $5\buffer[1:0]
     3/8: $4\buffer[1:0]
     4/8: $3\buffer[1:0]
     5/8: $2\buffer[1:0]
     6/8: $1\buffer[1:0]
     7/8: $0\buffer[1:0]
     8/8: $0\overflow[0:0]

4.13.4.6. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `$paramod$4f3012f00d814c8e8facef5376cedcd50b18e864\_90_shift_shiftx.\overflow' from process `$paramod$4f3012f00d814c8e8facef5376cedcd50b18e864\_90_shift_shiftx.$proc$/project/tools/edapack/0.0.1/icestorm/0.0.1/icestorm/bin/../share/yosys/techmap.v:145$846'.
No latch inferred for signal `$paramod$4f3012f00d814c8e8facef5376cedcd50b18e864\_90_shift_shiftx.\buffer' from process `$paramod$4f3012f00d814c8e8facef5376cedcd50b18e864\_90_shift_shiftx.$proc$/project/tools/edapack/0.0.1/icestorm/0.0.1/icestorm/bin/../share/yosys/techmap.v:145$846'.

4.13.4.7. Executing PROC_DFF pass (convert process syncs to FFs).

4.13.4.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 2 empty switches in `$paramod$4f3012f00d814c8e8facef5376cedcd50b18e864\_90_shift_shiftx.$proc$/project/tools/edapack/0.0.1/icestorm/0.0.1/icestorm/bin/../share/yosys/techmap.v:145$846'.
Removing empty process `$paramod$4f3012f00d814c8e8facef5376cedcd50b18e864\_90_shift_shiftx.$proc$/project/tools/edapack/0.0.1/icestorm/0.0.1/icestorm/bin/../share/yosys/techmap.v:145$846'.
Cleaned up 2 empty switches.
Removed 0 unused cells and 16 unused wires.
Analyzing pattern of constant bits for this cell:
Creating constmapped module `$paramod$constmap:24545b291197562699fdac947c4a03b055b989d6$paramod$4f3012f00d814c8e8facef5376cedcd50b18e864\_90_shift_shiftx'.

4.13.5. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$constmap:24545b291197562699fdac947c4a03b055b989d6$paramod$4f3012f00d814c8e8facef5376cedcd50b18e864\_90_shift_shiftx..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$862
    Root of a mux tree: $procmux$854 (pure)
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$859.
    dead port 2/2 on $mux $procmux$851.
    dead port 2/2 on $mux $procmux$848.
Removed 3 multiplexer ports.

4.13.6. Executing OPT_EXPR pass (perform const folding).
Removed 0 unused cells and 5 unused wires.

4.13.7. Continuing TECHMAP pass.
Mapping wb_interconnect_2x2.$techmap\u_ic.$shiftx$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:233$144 using $paramod$constmap:24545b291197562699fdac947c4a03b055b989d6$paramod$4f3012f00d814c8e8facef5376cedcd50b18e864\_90_shift_shiftx.
Mapping wb_interconnect_2x2.$techmap\u_ic.$ternary$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:230$142 ($mux) with simplemap.
Mapping wb_interconnect_2x2.$techmap\u_ic.$shiftx$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:230$141 using $paramod$constmap:24545b291197562699fdac947c4a03b055b989d6$paramod$4f3012f00d814c8e8facef5376cedcd50b18e864\_90_shift_shiftx.
Mapping wb_interconnect_2x2.$techmap\u_ic.$ternary$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:222$139 ($mux) with simplemap.
Mapping wb_interconnect_2x2.$techmap\u_ic.$shiftx$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:222$138 using $paramod$constmap:24545b291197562699fdac947c4a03b055b989d6$paramod$4f3012f00d814c8e8facef5376cedcd50b18e864\_90_shift_shiftx.
Mapping wb_interconnect_2x2.$techmap\u_ic.$eq$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:221$137 ($lut) with simplemap.
Mapping wb_interconnect_2x2.$techmap\u_ic.$eq$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:197$136 ($lut) with simplemap.
Mapping wb_interconnect_2x2.$techmap\u_ic.$eq$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:197$135 ($logic_not) with simplemap.
Mapping wb_interconnect_2x2.$techmap\u_ic.$ternary$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:233$133 ($mux) with simplemap.
Mapping wb_interconnect_2x2.$techmap\u_ic.$shiftx$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:233$132 using $paramod$constmap:24545b291197562699fdac947c4a03b055b989d6$paramod$4f3012f00d814c8e8facef5376cedcd50b18e864\_90_shift_shiftx.
Mapping wb_interconnect_2x2.$techmap\u_ic.$ternary$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:230$130 ($mux) with simplemap.
Mapping wb_interconnect_2x2.$techmap\u_ic.$shiftx$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:230$129 using $paramod$constmap:24545b291197562699fdac947c4a03b055b989d6$paramod$4f3012f00d814c8e8facef5376cedcd50b18e864\_90_shift_shiftx.
Mapping wb_interconnect_2x2.$techmap\u_ic.$ternary$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:222$127 ($mux) with simplemap.
Mapping wb_interconnect_2x2.$techmap\u_ic.$shiftx$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:222$126 using $paramod$constmap:24545b291197562699fdac947c4a03b055b989d6$paramod$4f3012f00d814c8e8facef5376cedcd50b18e864\_90_shift_shiftx.
Mapping wb_interconnect_2x2.$techmap\u_ic.$eq$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:221$125 ($lut) with simplemap.
Mapping wb_interconnect_2x2.$techmap\u_ic.$eq$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:197$124 ($lut) with simplemap.
Mapping wb_interconnect_2x2.$techmap\u_ic.$eq$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:197$123 ($logic_not) with simplemap.
Mapping wb_interconnect_2x2.$techmap\u_ic.$shiftx$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:183$120 using $paramod$constmap:24545b291197562699fdac947c4a03b055b989d6$paramod$4f3012f00d814c8e8facef5376cedcd50b18e864\_90_shift_shiftx.
Mapping wb_interconnect_2x2.$techmap\u_ic.$eq$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:175$118 ($lut) with simplemap.
Mapping wb_interconnect_2x2.$techmap\u_ic.$eq$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:175$117 ($logic_not) with simplemap.
Mapping wb_interconnect_2x2.$techmap\u_ic.$shiftx$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:183$114 using $paramod$constmap:24545b291197562699fdac947c4a03b055b989d6$paramod$4f3012f00d814c8e8facef5376cedcd50b18e864\_90_shift_shiftx.
Mapping wb_interconnect_2x2.$techmap\u_ic.$eq$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:175$112 ($lut) with simplemap.
Mapping wb_interconnect_2x2.$techmap\u_ic.$eq$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:175$111 ($logic_not) with simplemap.
Mapping wb_interconnect_2x2.$techmap\u_ic.s_arb[1].aw_arb.$procdff$283 ($dff) with simplemap.
Mapping wb_interconnect_2x2.$techmap\u_ic.s_arb[1].aw_arb.$procdff$284 ($dff) with simplemap.
Mapping wb_interconnect_2x2.$techmap\u_ic.s_arb[1].aw_arb.$procmux$281 ($mux) with simplemap.
Mapping wb_interconnect_2x2.$techmap\u_ic.s_arb[1].aw_arb.$procmux$278 ($mux) with simplemap.
Mapping wb_interconnect_2x2.$techmap\u_ic.s_arb[1].aw_arb.$procmux$276 ($mux) with simplemap.
Mapping wb_interconnect_2x2.$techmap\u_ic.s_arb[1].aw_arb.$procmux$273 ($mux) with simplemap.
Mapping wb_interconnect_2x2.$techmap\u_ic.s_arb[1].aw_arb.$procmux$271_CMP0 ($not) with simplemap.

4.13.8. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_pmux'.
Parameter \WIDTH = 1
Parameter \S_WIDTH = 2
Generating RTLIL representation for module `$paramod\_90_pmux\WIDTH=1\S_WIDTH=2'.

4.13.9. Continuing TECHMAP pass.
Mapping wb_interconnect_2x2.$techmap\u_ic.s_arb[1].aw_arb.$procmux$267 using $paramod\_90_pmux\WIDTH=1\S_WIDTH=2.
Mapping wb_interconnect_2x2.$techmap\u_ic.s_arb[1].aw_arb.$procmux$265 ($mux) with simplemap.
Mapping wb_interconnect_2x2.$techmap\u_ic.s_arb[1].aw_arb.$and$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v:85$175 ($and) with simplemap.
Mapping wb_interconnect_2x2.$techmap\u_ic.s_arb[1].aw_arb.$and$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v:61$173 ($and) with simplemap.
Mapping wb_interconnect_2x2.$techmap\u_ic.s_arb[1].aw_arb.$not$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v:61$172 ($not) with simplemap.
Mapping wb_interconnect_2x2.$techmap\u_ic.s_arb[1].aw_arb.$eq$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v:122$169 ($logic_not) with simplemap.
Mapping wb_interconnect_2x2.$techmap\u_ic.s_arb[1].aw_arb.$and$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v:122$168 ($and) with simplemap.
Mapping wb_interconnect_2x2.$techmap\u_ic.s_arb[1].aw_arb.$reduce_or$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v:113$167 ($reduce_or) with simplemap.
Mapping wb_interconnect_2x2.$techmap\u_ic.s_arb[1].aw_arb.$ternary$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v:103$164 ($mux) with simplemap.
Mapping wb_interconnect_2x2.$techmap\u_ic.s_arb[0].aw_arb.$procdff$283 ($dff) with simplemap.
Mapping wb_interconnect_2x2.$techmap\u_ic.s_arb[0].aw_arb.$procdff$284 ($dff) with simplemap.
Mapping wb_interconnect_2x2.$techmap\u_ic.s_arb[0].aw_arb.$procmux$281 ($mux) with simplemap.
Mapping wb_interconnect_2x2.$techmap\u_ic.s_arb[0].aw_arb.$procmux$278 ($mux) with simplemap.
Mapping wb_interconnect_2x2.$techmap\u_ic.s_arb[0].aw_arb.$procmux$276 ($mux) with simplemap.
Mapping wb_interconnect_2x2.$techmap\u_ic.s_arb[0].aw_arb.$procmux$273 ($mux) with simplemap.
Mapping wb_interconnect_2x2.$techmap\u_ic.s_arb[0].aw_arb.$procmux$271_CMP0 ($not) with simplemap.
Mapping wb_interconnect_2x2.$techmap\u_ic.s_arb[0].aw_arb.$procmux$267 using $paramod\_90_pmux\WIDTH=1\S_WIDTH=2.
Mapping wb_interconnect_2x2.$techmap\u_ic.s_arb[0].aw_arb.$procmux$265 ($mux) with simplemap.
Mapping wb_interconnect_2x2.$techmap\u_ic.s_arb[0].aw_arb.$and$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v:85$175 ($and) with simplemap.
Mapping wb_interconnect_2x2.$techmap\u_ic.s_arb[0].aw_arb.$and$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v:61$173 ($and) with simplemap.
Mapping wb_interconnect_2x2.$techmap\u_ic.s_arb[0].aw_arb.$not$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v:61$172 ($not) with simplemap.
Mapping wb_interconnect_2x2.$techmap\u_ic.s_arb[0].aw_arb.$eq$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v:122$169 ($logic_not) with simplemap.
Mapping wb_interconnect_2x2.$techmap\u_ic.s_arb[0].aw_arb.$and$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v:122$168 ($and) with simplemap.
Mapping wb_interconnect_2x2.$techmap\u_ic.s_arb[0].aw_arb.$reduce_or$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v:113$167 ($reduce_or) with simplemap.
Mapping wb_interconnect_2x2.$techmap\u_ic.s_arb[0].aw_arb.$ternary$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v:103$164 ($mux) with simplemap.
Mapping wb_interconnect_2x2.$techmap$techmap\u_ic.$shiftx$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:222$138.$procmux$862 ($mux) with simplemap.
Mapping wb_interconnect_2x2.$techmap$techmap\u_ic.$shiftx$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:222$138.$procmux$854 ($mux) with simplemap.
Mapping wb_interconnect_2x2.$techmap$techmap\u_ic.$shiftx$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:230$141.$procmux$862 ($mux) with simplemap.
Mapping wb_interconnect_2x2.$techmap$techmap\u_ic.$shiftx$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:230$141.$procmux$854 ($mux) with simplemap.
Mapping wb_interconnect_2x2.$techmap$techmap\u_ic.$shiftx$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:233$144.$procmux$862 ($mux) with simplemap.
Mapping wb_interconnect_2x2.$techmap$techmap\u_ic.$shiftx$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:233$144.$procmux$854 ($mux) with simplemap.
Mapping wb_interconnect_2x2.$techmap$techmap\u_ic.$shiftx$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:233$132.$procmux$854 ($mux) with simplemap.
Mapping wb_interconnect_2x2.$techmap$techmap\u_ic.$shiftx$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:233$132.$procmux$862 ($mux) with simplemap.
Mapping wb_interconnect_2x2.$techmap$techmap\u_ic.$shiftx$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:230$129.$procmux$854 ($mux) with simplemap.
Mapping wb_interconnect_2x2.$techmap$techmap\u_ic.$shiftx$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:230$129.$procmux$862 ($mux) with simplemap.
Mapping wb_interconnect_2x2.$techmap$techmap\u_ic.$shiftx$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:222$126.$procmux$854 ($mux) with simplemap.
Mapping wb_interconnect_2x2.$techmap$techmap\u_ic.$shiftx$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:222$126.$procmux$862 ($mux) with simplemap.
Mapping wb_interconnect_2x2.$techmap$techmap\u_ic.$shiftx$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:183$120.$procmux$854 ($mux) with simplemap.
Mapping wb_interconnect_2x2.$techmap$techmap\u_ic.$shiftx$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:183$120.$procmux$862 ($mux) with simplemap.
Mapping wb_interconnect_2x2.$techmap$techmap\u_ic.$shiftx$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:183$114.$procmux$854 ($mux) with simplemap.
Mapping wb_interconnect_2x2.$techmap$techmap\u_ic.$shiftx$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:183$114.$procmux$862 ($mux) with simplemap.
Mapping wb_interconnect_2x2.$techmap$techmap\u_ic.s_arb[1].aw_arb.$procmux$267.$reduce_or$/project/tools/edapack/0.0.1/icestorm/0.0.1/icestorm/bin/../share/yosys/techmap.v:441$928 ($reduce_or) with simplemap.
Mapping wb_interconnect_2x2.$techmap$techmap\u_ic.s_arb[1].aw_arb.$procmux$267.$and$/project/tools/edapack/0.0.1/icestorm/0.0.1/icestorm/bin/../share/yosys/techmap.v:434$927 ($and) with simplemap.
Mapping wb_interconnect_2x2.$techmap$techmap\u_ic.s_arb[1].aw_arb.$procmux$267.$and$/project/tools/edapack/0.0.1/icestorm/0.0.1/icestorm/bin/../share/yosys/techmap.v:434$926 ($and) with simplemap.
Mapping wb_interconnect_2x2.$techmap$techmap\u_ic.s_arb[1].aw_arb.$procmux$267.$ternary$/project/tools/edapack/0.0.1/icestorm/0.0.1/icestorm/bin/../share/yosys/techmap.v:445$925 ($mux) with simplemap.
Mapping wb_interconnect_2x2.$techmap$techmap\u_ic.s_arb[1].aw_arb.$procmux$267.$reduce_or$/project/tools/edapack/0.0.1/icestorm/0.0.1/icestorm/bin/../share/yosys/techmap.v:445$924 ($reduce_or) with simplemap.
Mapping wb_interconnect_2x2.$techmap$techmap\u_ic.s_arb[0].aw_arb.$procmux$267.$reduce_or$/project/tools/edapack/0.0.1/icestorm/0.0.1/icestorm/bin/../share/yosys/techmap.v:441$928 ($reduce_or) with simplemap.
Mapping wb_interconnect_2x2.$techmap$techmap\u_ic.s_arb[0].aw_arb.$procmux$267.$and$/project/tools/edapack/0.0.1/icestorm/0.0.1/icestorm/bin/../share/yosys/techmap.v:434$927 ($and) with simplemap.
Mapping wb_interconnect_2x2.$techmap$techmap\u_ic.s_arb[0].aw_arb.$procmux$267.$and$/project/tools/edapack/0.0.1/icestorm/0.0.1/icestorm/bin/../share/yosys/techmap.v:434$926 ($and) with simplemap.
Mapping wb_interconnect_2x2.$techmap$techmap\u_ic.s_arb[0].aw_arb.$procmux$267.$ternary$/project/tools/edapack/0.0.1/icestorm/0.0.1/icestorm/bin/../share/yosys/techmap.v:445$925 ($mux) with simplemap.
Mapping wb_interconnect_2x2.$techmap$techmap\u_ic.s_arb[0].aw_arb.$procmux$267.$reduce_or$/project/tools/edapack/0.0.1/icestorm/0.0.1/icestorm/bin/../share/yosys/techmap.v:445$924 ($reduce_or) with simplemap.
No more expansions possible.

4.14. Executing ICE40_OPT pass (performing simple optimizations).

4.14.1. Running ICE40 specific optimizations.

4.14.2. Executing OPT_EXPR pass (perform const folding).
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$807' (and_or_buffer) in module `\wb_interconnect_2x2' with constant driver `$auto$opt_expr.cc:145:group_cell_inputs$298 [0] = \adr [28]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$808' (and_or_buffer) in module `\wb_interconnect_2x2' with constant driver `$auto$opt_expr.cc:145:group_cell_inputs$298 [1] = \adr [29]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$814' (?0) in module `\wb_interconnect_2x2' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$811 [1] = \adr [29]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$809' (and_or_buffer) in module `\wb_interconnect_2x2' with constant driver `$auto$opt_expr.cc:145:group_cell_inputs$298 [2] = \adr [30]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$815' (?0) in module `\wb_interconnect_2x2' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$811 [2] = \adr [30]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$810' (and_or_buffer) in module `\wb_interconnect_2x2' with constant driver `$auto$opt_expr.cc:145:group_cell_inputs$298 [3] = \adr [31]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$816' (?0) in module `\wb_interconnect_2x2' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$811 [3] = \adr [31]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$353' (and_or_buffer) in module `\wb_interconnect_2x2' with constant driver `$auto$opt_expr.cc:145:group_cell_inputs$302 [0] = \adr [60]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$354' (and_or_buffer) in module `\wb_interconnect_2x2' with constant driver `$auto$opt_expr.cc:145:group_cell_inputs$302 [1] = \adr [61]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$777' (?0) in module `\wb_interconnect_2x2' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$774 [1] = \adr [61]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$355' (and_or_buffer) in module `\wb_interconnect_2x2' with constant driver `$auto$opt_expr.cc:145:group_cell_inputs$302 [2] = \adr [62]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$778' (?0) in module `\wb_interconnect_2x2' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$774 [2] = \adr [62]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$356' (and_or_buffer) in module `\wb_interconnect_2x2' with constant driver `$auto$opt_expr.cc:145:group_cell_inputs$302 [3] = \adr [63]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$779' (?0) in module `\wb_interconnect_2x2' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$774 [3] = \adr [63]'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$522' in module `wb_interconnect_2x2'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$830' (?0) in module `\wb_interconnect_2x2' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$828 [0] = \adr [28]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$831' (?0) in module `\wb_interconnect_2x2' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$828 [1] = \adr [29]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$832' (?0) in module `\wb_interconnect_2x2' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$828 [2] = \adr [30]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$793' (?0) in module `\wb_interconnect_2x2' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$791 [0] = \adr [60]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$794' (?0) in module `\wb_interconnect_2x2' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$791 [1] = \adr [61]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$795' (?0) in module `\wb_interconnect_2x2' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$791 [2] = \adr [62]'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$684' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$683' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$682' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$681' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$533' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$704' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$536' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$668' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$666' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$664' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$662' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$660' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$700' in module `wb_interconnect_2x2'.
Replacing $_MUX_ cell `$auto$simplemap.cc:311:simplemap_lut$875' (00?) in module `\wb_interconnect_2x2' with constant driver `$auto$simplemap.cc:309:simplemap_lut$873 [1] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:311:simplemap_lut$874' (01?) in module `\wb_interconnect_2x2' with constant driver `$auto$simplemap.cc:309:simplemap_lut$873 [0] = \u_ic.target_active_initiator[1] [0]'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$699' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$698' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$697' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$696' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$695' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$518' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$694' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$535' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$393' in module `wb_interconnect_2x2'.
Replacing $_MUX_ cell `$auto$simplemap.cc:311:simplemap_lut$906' (01?) in module `\wb_interconnect_2x2' with constant driver `$auto$simplemap.cc:309:simplemap_lut$905 [0] = \u_ic.initiator_active_target[0] [0]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:311:simplemap_lut$907' (00?) in module `\wb_interconnect_2x2' with constant driver `$auto$simplemap.cc:309:simplemap_lut$905 [1] = 1'0'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$446' in module `wb_interconnect_2x2'.
Replacing $_MUX_ cell `$auto$simplemap.cc:311:simplemap_lut$898' (01?) in module `\wb_interconnect_2x2' with constant driver `$auto$simplemap.cc:309:simplemap_lut$897 [0] = \u_ic.initiator_active_target[1] [0]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:311:simplemap_lut$899' (00?) in module `\wb_interconnect_2x2' with constant driver `$auto$simplemap.cc:309:simplemap_lut$897 [1] = 1'0'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$463' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$517' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$435' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$467' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$654' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$637' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$651' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$537' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$538' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$638' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$520' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$565' in module `wb_interconnect_2x2'.
Replacing $_MUX_ cell `$auto$simplemap.cc:311:simplemap_lut$890' (01?) in module `\wb_interconnect_2x2' with constant driver `$auto$simplemap.cc:309:simplemap_lut$889 [0] = \u_ic.target_active_initiator[0] [0]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:311:simplemap_lut$891' (00?) in module `\wb_interconnect_2x2' with constant driver `$auto$simplemap.cc:309:simplemap_lut$889 [1] = 1'0'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$566' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$521' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$540' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$562' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$563' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$539' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$639' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$524' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$523' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$542' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$519' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$543' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$544' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$541' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$640' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$526' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$525' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$641' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$528' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$546' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$527' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$701' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$545' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$642' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$530' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$548' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$529' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$702' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$547' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$550' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$643' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$532' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$549' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$531' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$644' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$552' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$703' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$534' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$465' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$466' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$464' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$462' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$461' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$460' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$505' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$440' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$690' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$439' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$456' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$437' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$457' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$685' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$508' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$507' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$691' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$686' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$510' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$509' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$692' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$687' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$512' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$502' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$511' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$693' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$501' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$514' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$688' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$513' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$504' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$503' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$689' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$516' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$506' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$515' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$438' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$441' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$392' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$551' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$399' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$395' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$400' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$396' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$394' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$443' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$401' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$444' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$398' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$397' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$436' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$442' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$388' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$445' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$680' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$679' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$678' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$677' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$676' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$675' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$674' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$673' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$672' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$671' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$670' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$669' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$667' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$665' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$663' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$661' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$659' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$658' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$657' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$656' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$655' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$652' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$653' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$650' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$391' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$648' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$649' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$647' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$646' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$390' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$645' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$389' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$568' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$567' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$564' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$561' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$559' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$560' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$558' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$557' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$556' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$387' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$554' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$555' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$553' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$386' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$385' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$384' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$459' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$458' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$455' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$454' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$453' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$452' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$451' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$450' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$449' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$448' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$447' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$383' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$382' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$381' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$380' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$379' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$378' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$377' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$376' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$375' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$374' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$373' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$372' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$371' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$370' in module `wb_interconnect_2x2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$369' in module `wb_interconnect_2x2'.
Replacing $_MUX_ cell `$auto$simplemap.cc:311:simplemap_lut$885' (00?) in module `\wb_interconnect_2x2' with constant driver `$auto$simplemap.cc:309:simplemap_lut$884 [0] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:311:simplemap_lut$886' (01?) in module `\wb_interconnect_2x2' with constant driver `$auto$simplemap.cc:309:simplemap_lut$884 [1] = \u_ic.target_active_initiator[0] [0]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$984' (?x?) in module `\wb_interconnect_2x2' with constant driver `$techmap$techmap\u_ic.$shiftx$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:230$129.$1\buffer[1:0] [0] = \stb [0]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$985' (?x?) in module `\wb_interconnect_2x2' with constant driver `$techmap$techmap\u_ic.$shiftx$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:230$129.$1\buffer[1:0] [1] = \stb [1]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$988' (?x?) in module `\wb_interconnect_2x2' with constant driver `$techmap$techmap\u_ic.$shiftx$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:222$126.$1\buffer[1:0] [0] = \cyc [0]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$989' (?x?) in module `\wb_interconnect_2x2' with constant driver `$techmap$techmap\u_ic.$shiftx$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:222$126.$1\buffer[1:0] [1] = \cyc [1]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$980' (?x?) in module `\wb_interconnect_2x2' with constant driver `$techmap$techmap\u_ic.$shiftx$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:233$132.$1\buffer[1:0] [0] = \we [0]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$981' (?x?) in module `\wb_interconnect_2x2' with constant driver `$techmap$techmap\u_ic.$shiftx$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:233$132.$1\buffer[1:0] [1] = \we [1]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:311:simplemap_lut$869' (00?) in module `\wb_interconnect_2x2' with constant driver `$auto$simplemap.cc:309:simplemap_lut$868 [0] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:311:simplemap_lut$870' (01?) in module `\wb_interconnect_2x2' with constant driver `$auto$simplemap.cc:309:simplemap_lut$868 [1] = \u_ic.target_active_initiator[1] [0]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$966' (?x?) in module `\wb_interconnect_2x2' with constant driver `$techmap$techmap\u_ic.$shiftx$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:222$138.$1\buffer[1:0] [0] = \cyc [0]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$967' (?x?) in module `\wb_interconnect_2x2' with constant driver `$techmap$techmap\u_ic.$shiftx$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:222$138.$1\buffer[1:0] [1] = \cyc [1]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$974' (?x?) in module `\wb_interconnect_2x2' with constant driver `$techmap$techmap\u_ic.$shiftx$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:233$144.$1\buffer[1:0] [0] = \we [0]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$975' (?x?) in module `\wb_interconnect_2x2' with constant driver `$techmap$techmap\u_ic.$shiftx$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:233$144.$1\buffer[1:0] [1] = \we [1]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$970' (?x?) in module `\wb_interconnect_2x2' with constant driver `$techmap$techmap\u_ic.$shiftx$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:230$141.$1\buffer[1:0] [0] = \stb [0]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$971' (?x?) in module `\wb_interconnect_2x2' with constant driver `$techmap$techmap\u_ic.$shiftx$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:230$141.$1\buffer[1:0] [1] = \stb [1]'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$929' in module `wb_interconnect_2x2'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1004' (const_or) in module `\wb_interconnect_2x2' with constant driver `$techmap$techmap\u_ic.s_arb[1].aw_arb.$procmux$267.$reduce_or$/project/tools/edapack/0.0.1/icestorm/0.0.1/icestorm/bin/../share/yosys/techmap.v:445$924_Y = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1002' (0?1) in module `\wb_interconnect_2x2' with constant driver `$techmap$techmap\u_ic.s_arb[1].aw_arb.$procmux$267.$ternary$/project/tools/edapack/0.0.1/icestorm/0.0.1/icestorm/bin/../share/yosys/techmap.v:445$925_Y = $techmap$techmap\u_ic.s_arb[1].aw_arb.$procmux$267.$reduce_or$/project/tools/edapack/0.0.1/icestorm/0.0.1/icestorm/bin/../share/yosys/techmap.v:441$928_Y'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$953' in module `wb_interconnect_2x2'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1011' (const_or) in module `\wb_interconnect_2x2' with constant driver `$techmap$techmap\u_ic.s_arb[0].aw_arb.$procmux$267.$reduce_or$/project/tools/edapack/0.0.1/icestorm/0.0.1/icestorm/bin/../share/yosys/techmap.v:445$924_Y = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1009' (0?1) in module `\wb_interconnect_2x2' with constant driver `$techmap$techmap\u_ic.s_arb[0].aw_arb.$procmux$267.$ternary$/project/tools/edapack/0.0.1/icestorm/0.0.1/icestorm/bin/../share/yosys/techmap.v:445$925_Y = $techmap$techmap\u_ic.s_arb[0].aw_arb.$procmux$267.$reduce_or$/project/tools/edapack/0.0.1/icestorm/0.0.1/icestorm/bin/../share/yosys/techmap.v:441$928_Y'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$969' (?x?) in module `\wb_interconnect_2x2' with constant driver `$techmap\u_ic.$shiftx$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:222$138.buffer [1] = \cyc [1]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$973' (?x?) in module `\wb_interconnect_2x2' with constant driver `$techmap\u_ic.$shiftx$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:230$141.buffer [1] = \stb [1]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$977' (?x?) in module `\wb_interconnect_2x2' with constant driver `$techmap\u_ic.$shiftx$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:233$144.buffer [1] = \we [1]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$979' (?x?) in module `\wb_interconnect_2x2' with constant driver `$techmap\u_ic.$shiftx$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:233$132.buffer [1] = \we [1]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$983' (?x?) in module `\wb_interconnect_2x2' with constant driver `$techmap\u_ic.$shiftx$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:230$129.buffer [1] = \stb [1]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$987' (?x?) in module `\wb_interconnect_2x2' with constant driver `$techmap\u_ic.$shiftx$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:222$126.buffer [1] = \cyc [1]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$992' (?x?) in module `\wb_interconnect_2x2' with constant driver `$techmap$techmap\u_ic.$shiftx$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:183$120.$1\buffer[1:0] [0] = \terr [0]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$993' (?x?) in module `\wb_interconnect_2x2' with constant driver `$techmap$techmap\u_ic.$shiftx$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:183$120.$1\buffer[1:0] [1] = \terr [1]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$991' (?x?) in module `\wb_interconnect_2x2' with constant driver `$techmap\u_ic.$shiftx$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:183$120.buffer [1] = \terr [1]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$996' (?x?) in module `\wb_interconnect_2x2' with constant driver `$techmap$techmap\u_ic.$shiftx$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:183$114.$1\buffer[1:0] [0] = \terr [0]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$997' (?x?) in module `\wb_interconnect_2x2' with constant driver `$techmap$techmap\u_ic.$shiftx$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:183$114.$1\buffer[1:0] [1] = \terr [1]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$995' (?x?) in module `\wb_interconnect_2x2' with constant driver `$techmap\u_ic.$shiftx$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_NxN.v:183$114.buffer [1] = \terr [1]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$929' (01?) in module `\wb_interconnect_2x2' with constant driver `$techmap\u_ic.s_arb[1].aw_arb.$procmux$265_Y = $auto$simplemap.cc:168:logic_reduce$933'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$953' (01?) in module `\wb_interconnect_2x2' with constant driver `$techmap\u_ic.s_arb[0].aw_arb.$procmux$265_Y = $auto$simplemap.cc:168:logic_reduce$957'.

4.14.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_interconnect_2x2'.
  Cell `$auto$simplemap.cc:37:simplemap_not$956' is identical to cell `$auto$simplemap.cc:277:simplemap_mux$363'.
    Redirecting output \Y: $techmap\u_ic.s_arb[0].aw_arb.$not$/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2//../../verilog/rtl/wb_interconnect_arb.v:61$172_Y = $techmap\u_ic.$1\initiator_active_target[0][1:0] [1]
    Removing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$956' from module `\wb_interconnect_2x2'.
Removed a total of 1 cells.

4.14.4. Executing OPT_RMDFF pass (remove dff with constant values).

4.14.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_interconnect_2x2..
  removing unused `$_NOT_' cell `$auto$simplemap.cc:206:simplemap_lognot$880'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:206:simplemap_lognot$896'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:206:simplemap_lognot$904'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:206:simplemap_lognot$912'.
  removing unused `$_DFF_P_' cell `$auto$simplemap.cc:420:simplemap_dff$914'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$917'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$919'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$921'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:206:simplemap_lognot$935'.
  removing unused `$_DFF_P_' cell `$auto$simplemap.cc:420:simplemap_dff$943'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$946'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$948'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$950'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:206:simplemap_lognot$959'.
  removed 109 unused temporary wires.
Removed 14 unused cells and 114 unused wires.

4.14.6. Rerunning OPT passes. (Removed registers in this run.)

4.14.7. Running ICE40 specific optimizations.

4.14.8. Executing OPT_EXPR pass (perform const folding).
Setting undriven signal in wb_interconnect_2x2 to undef: \u_ic.s_arb[1].aw_arb.last_gnt [1]
Setting undriven signal in wb_interconnect_2x2 to undef: \u_ic.s_arb[0].aw_arb.last_gnt [1]

4.14.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_interconnect_2x2'.
Removed a total of 0 cells.

4.14.10. Executing OPT_RMDFF pass (remove dff with constant values).

4.14.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_interconnect_2x2..
Removed 14 unused cells and 114 unused wires.

4.14.12. Finished OPT passes. (There is nothing left to do.)

4.15. Executing DFFSR2DFF pass (mapping DFFSR cells to simpler FFs).

4.16. Executing DFF2DFFE pass (transform $dff to $dffe where applicable).
Selected cell types for direct conversion:
  $_DFF_PP1_ -> $__DFFE_PP1
  $_DFF_PP0_ -> $__DFFE_PP0
  $_DFF_PN1_ -> $__DFFE_PN1
  $_DFF_PN0_ -> $__DFFE_PN0
  $_DFF_NP1_ -> $__DFFE_NP1
  $_DFF_NP0_ -> $__DFFE_NP0
  $_DFF_NN1_ -> $__DFFE_NN1
  $_DFF_NN0_ -> $__DFFE_NN0
  $_DFF_N_ -> $_DFFE_NP_
  $_DFF_P_ -> $_DFFE_PP_
Transforming FF to FF+Enable cells in module wb_interconnect_2x2:
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$913 to $_DFFE_PP_ for $techmap\u_ic.s_arb[1].aw_arb.$0\last_gnt[1:0] [0] -> \u_ic.s_arb[1].aw_arb.last_gnt [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$942 to $_DFFE_PP_ for $techmap\u_ic.s_arb[0].aw_arb.$0\last_gnt[1:0] [0] -> \u_ic.s_arb[0].aw_arb.last_gnt [0].

4.17. Executing TECHMAP pass (map to technology primitives).

4.17.1. Executing Verilog-2005 frontend.
Parsing Verilog input from `/project/tools/edapack/0.0.1/icestorm/0.0.1/icestorm/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Successfully finished Verilog frontend.
Mapping wb_interconnect_2x2.$auto$simplemap.cc:420:simplemap_dff$913 using \$_DFFE_PP_.
Mapping wb_interconnect_2x2.$auto$simplemap.cc:420:simplemap_dff$915 using \$_DFF_P_.
Mapping wb_interconnect_2x2.$auto$simplemap.cc:420:simplemap_dff$942 using \$_DFFE_PP_.
Mapping wb_interconnect_2x2.$auto$simplemap.cc:420:simplemap_dff$944 using \$_DFF_P_.
No more expansions possible.

4.18. Executing OPT_EXPR pass (perform const folding).
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$949' (x??) in module `\wb_interconnect_2x2' with constant driver `$techmap\u_ic.s_arb[0].aw_arb.$procmux$276_Y [0] = \u_ic.s_arb[0].aw_arb.gnt [0]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$947' (?x?) in module `\wb_interconnect_2x2' with constant driver `$techmap\u_ic.s_arb[0].aw_arb.$procmux$278_Y [0] = \u_ic.s_arb[0].aw_arb.gnt [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1053' (?0) in module `\wb_interconnect_2x2' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1051 [0] = \reset'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1041' (?0) in module `\wb_interconnect_2x2' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1039 [0] = \reset'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1042' (?0) in module `\wb_interconnect_2x2' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1039 [1] = $techmap\u_ic.s_arb[0].aw_arb.$procmux$269_Y'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1043' (?0) in module `\wb_interconnect_2x2' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1039 [2] = \u_ic.s_arb[0].aw_arb.state'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1028' (?0) in module `\wb_interconnect_2x2' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1026 [0] = \reset'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1017' (?0) in module `\wb_interconnect_2x2' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1014 [1] = $techmap\u_ic.s_arb[1].aw_arb.$procmux$269_Y'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1016' (?0) in module `\wb_interconnect_2x2' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1014 [0] = \reset'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1018' (?0) in module `\wb_interconnect_2x2' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1014 [2] = \u_ic.s_arb[1].aw_arb.state'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$920' (x??) in module `\wb_interconnect_2x2' with constant driver `$techmap\u_ic.s_arb[1].aw_arb.$procmux$276_Y [0] = \u_ic.s_arb[1].aw_arb.gnt [0]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$918' (?x?) in module `\wb_interconnect_2x2' with constant driver `$techmap\u_ic.s_arb[1].aw_arb.$procmux$278_Y [0] = \u_ic.s_arb[1].aw_arb.gnt [0]'.

4.19. Executing SIMPLEMAP pass (map simple cells to gate primitives).

4.20. Executing ICE40_FFINIT pass (implement FF init values).
Handling FF init values in wb_interconnect_2x2.
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$913 (SB_DFFE): \u_ic.s_arb[1].aw_arb.last_gnt [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$942 (SB_DFFE): \u_ic.s_arb[0].aw_arb.last_gnt [0] = 0

4.21. Executing ICE40_FFSSR pass (merge synchronous set/reset into FF cells).
Merging set/reset $_MUX_ cells into SB_FFs in wb_interconnect_2x2.
  Merging $auto$simplemap.cc:277:simplemap_mux$951 (A=$techmap$techmap\u_ic.s_arb[0].aw_arb.$procmux$267.$reduce_or$/project/tools/edapack/0.0.1/icestorm/0.0.1/icestorm/bin/../share/yosys/techmap.v:441$928_Y, B=1'0, S=\reset) into $auto$simplemap.cc:420:simplemap_dff$944 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$916 (A=\u_ic.s_arb[1].aw_arb.gnt [0], B=1'0, S=\reset) into $auto$simplemap.cc:420:simplemap_dff$913 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$922 (A=$techmap$techmap\u_ic.s_arb[1].aw_arb.$procmux$267.$reduce_or$/project/tools/edapack/0.0.1/icestorm/0.0.1/icestorm/bin/../share/yosys/techmap.v:441$928_Y, B=1'0, S=\reset) into $auto$simplemap.cc:420:simplemap_dff$915 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$945 (A=\u_ic.s_arb[0].aw_arb.gnt [0], B=1'0, S=\reset) into $auto$simplemap.cc:420:simplemap_dff$942 (SB_DFFE).

4.22. Executing ICE40_OPT pass (performing simple optimizations).

4.22.1. Running ICE40 specific optimizations.

4.22.2. Executing OPT_EXPR pass (perform const folding).
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$965' in module `wb_interconnect_2x2' with or-gate.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$357' in module `wb_interconnect_2x2' with or-gate.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$941' in module `wb_interconnect_2x2' with or-gate.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$361' in module `wb_interconnect_2x2' with or-gate.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$364' in module `wb_interconnect_2x2' with or-gate.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$367' in module `wb_interconnect_2x2' with or-gate.
Replacing $_MUX_ cell `$auto$simplemap.cc:311:simplemap_lut$888' in module `wb_interconnect_2x2' with and-gate.
Replacing $_MUX_ cell `$auto$simplemap.cc:311:simplemap_lut$872' in module `wb_interconnect_2x2' with and-gate.

4.22.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_interconnect_2x2'.
Removed a total of 0 cells.

4.22.4. Executing OPT_RMDFF pass (remove dff with constant values).

4.22.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_interconnect_2x2..
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$945'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$916'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$922'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$951'.
  removed 30 unused temporary wires.
Removed 18 unused cells and 144 unused wires.

4.22.6. Rerunning OPT passes. (Removed registers in this run.)

4.22.7. Running ICE40 specific optimizations.

4.22.8. Executing OPT_EXPR pass (perform const folding).

4.22.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_interconnect_2x2'.
Removed a total of 0 cells.

4.22.10. Executing OPT_RMDFF pass (remove dff with constant values).

4.22.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_interconnect_2x2..
Removed 18 unused cells and 144 unused wires.

4.22.12. Finished OPT passes. (There is nothing left to do.)

4.23. Executing TECHMAP pass (map to technology primitives).

4.23.1. Executing Verilog-2005 frontend.
Parsing Verilog input from `/project/tools/edapack/0.0.1/icestorm/0.0.1/icestorm/bin/../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.
No more expansions possible.

4.24. Executing ABC pass (technology mapping using ABC).

4.24.1. Extracting gate netlist of module `\wb_interconnect_2x2' to `<abc-temp-dir>/input.blif'..
Extracted 501 gates and 718 wires to a netlist network with 215 inputs and 216 outputs.

4.24.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + lutpack -S 1 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.24.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      436
ABC RESULTS:        internal signals:      287
ABC RESULTS:           input signals:      215
ABC RESULTS:          output signals:      216
Removing temp directory.
Removed 0 unused cells and 516 unused wires.

4.25. Executing TECHMAP pass (map to technology primitives).

4.25.1. Executing Verilog-2005 frontend.
Parsing Verilog input from `/project/tools/edapack/0.0.1/icestorm/0.0.1/icestorm/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

4.25.2. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 4
Parameter \LUT = 16'0001000000000000
Generating RTLIL representation for module `$paramod\$lut\WIDTH=4\LUT=16'0001000000000000'.

4.25.3. Continuing TECHMAP pass.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1082 using $paramod\$lut\WIDTH=4\LUT=16'0001000000000000.

4.25.4. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 3
Parameter \LUT = 8'01000000
Generating RTLIL representation for module `$paramod\$lut\WIDTH=3\LUT=8'01000000'.

4.25.5. Continuing TECHMAP pass.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1081 using $paramod\$lut\WIDTH=3\LUT=8'01000000.

4.25.6. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 3
Parameter \LUT = 8'11001010
Generating RTLIL representation for module `$paramod\$lut\WIDTH=3\LUT=8'11001010'.

4.25.7. Continuing TECHMAP pass.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1291 using $paramod\$lut\WIDTH=3\LUT=8'11001010.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1084 using $paramod\$lut\WIDTH=4\LUT=16'0001000000000000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1083 using $paramod\$lut\WIDTH=3\LUT=8'01000000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1290 using $paramod\$lut\WIDTH=3\LUT=8'11001010.

4.25.8. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 3
Parameter \LUT = 8'10110000
Generating RTLIL representation for module `$paramod\$lut\WIDTH=3\LUT=8'10110000'.

4.25.9. Continuing TECHMAP pass.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1159 using $paramod\$lut\WIDTH=3\LUT=8'10110000.

4.25.10. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 3
Parameter \LUT = 8'01110000
Generating RTLIL representation for module `$paramod\$lut\WIDTH=3\LUT=8'01110000'.

4.25.11. Continuing TECHMAP pass.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1091 using $paramod\$lut\WIDTH=3\LUT=8'01110000.

4.25.12. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 4
Parameter \LUT = 16'1111100010001000
Generating RTLIL representation for module `$paramod\$lut\WIDTH=4\LUT=16'1111100010001000'.

4.25.13. Continuing TECHMAP pass.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1289 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1088 using $paramod\$lut\WIDTH=3\LUT=8'01000000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1087 using $paramod\$lut\WIDTH=3\LUT=8'01000000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1090 using $paramod\$lut\WIDTH=3\LUT=8'01110000.

4.25.14. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 2
Parameter \LUT = 4'1110
Generating RTLIL representation for module `$paramod\$lut\WIDTH=2\LUT=4'1110'.

4.25.15. Continuing TECHMAP pass.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1086 using $paramod\$lut\WIDTH=2\LUT=4'1110.

4.25.16. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 4
Parameter \LUT = 16'1100101000000000
Generating RTLIL representation for module `$paramod\$lut\WIDTH=4\LUT=16'1100101000000000'.

4.25.17. Continuing TECHMAP pass.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1288 using $paramod\$lut\WIDTH=4\LUT=16'1100101000000000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1224 using $paramod\$lut\WIDTH=3\LUT=8'10110000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1287 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1286 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1285 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1284 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1283 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1282 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1281 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1280 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1279 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1278 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1277 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1276 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1275 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1274 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1273 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1272 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1271 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1270 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1269 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1268 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1267 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1266 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1265 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1264 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1263 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1262 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1261 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1260 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1259 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1258 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1257 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1256 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1255 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1254 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1253 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1252 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1251 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1250 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1249 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1248 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1247 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1246 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1245 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1244 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1243 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1242 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1241 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1240 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1239 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1238 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1237 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1236 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1235 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1234 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1233 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1232 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1231 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1230 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1229 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1228 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1227 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1226 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1225 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1223 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1222 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1221 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1220 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1219 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1218 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1217 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1216 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1215 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1214 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1213 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1212 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1211 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1210 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1209 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1208 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1207 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1206 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1205 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1204 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1203 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1202 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1201 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1200 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1199 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1198 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1197 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1196 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1195 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1194 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1193 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1192 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1191 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1190 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1189 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1188 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1187 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1186 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1185 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1184 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1183 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1182 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1181 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1180 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1179 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1178 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1177 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1176 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1175 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1174 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1173 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1172 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1171 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1170 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1169 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1168 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1167 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1166 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1165 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1164 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1163 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1162 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1161 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1160 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1158 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1157 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1156 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1155 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1154 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1153 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1152 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1151 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1150 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1149 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1148 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1147 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1146 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1145 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1144 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1143 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1142 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1141 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1140 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1139 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1138 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1137 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1136 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1135 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1134 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1133 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1132 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1131 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1130 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1129 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1128 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1127 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1126 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1125 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1124 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1123 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1122 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1121 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1120 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1119 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1118 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1117 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1116 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1115 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1114 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1113 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1112 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1111 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1110 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1109 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1108 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1107 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1106 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1105 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1104 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1103 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1102 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1101 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1100 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1099 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1098 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1097 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1096 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1095 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1094 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1093 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1092 using $paramod\$lut\WIDTH=4\LUT=16'1111100010001000.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1080 using $paramod\$lut\WIDTH=2\LUT=4'1110.

4.25.18. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 3
Parameter \LUT = 8'11110100
Generating RTLIL representation for module `$paramod\$lut\WIDTH=3\LUT=8'11110100'.

4.25.19. Continuing TECHMAP pass.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1089 using $paramod\$lut\WIDTH=3\LUT=8'11110100.
Mapping wb_interconnect_2x2.$abc$1079$auto$blifparse.cc:492:parse_blif$1085 using $paramod\$lut\WIDTH=3\LUT=8'11110100.
No more expansions possible.
Removed 0 unused cells and 424 unused wires.

4.26. Executing HIERARCHY pass (managing design hierarchy).

4.26.1. Analyzing design hierarchy..
Top module:  \wb_interconnect_2x2

4.26.2. Analyzing design hierarchy..
Top module:  \wb_interconnect_2x2
Removed 0 unused modules.

4.26.3. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 4'1110
Generating RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=4'1110'.

4.26.4. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 8'01000000
Generating RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=8'01000000'.

4.26.5. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'0001000000000000
Generating RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'0001000000000000'.

4.26.6. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 8'01000000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=8'01000000'.

4.26.7. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'0001000000000000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'0001000000000000'.

4.26.8. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 8'11110100
Generating RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=8'11110100'.

4.26.9. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 4'1110
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=4'1110'.

4.26.10. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 8'01000000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=8'01000000'.

4.26.11. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 8'01000000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=8'01000000'.

4.26.12. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 8'11110100
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=8'11110100'.

4.26.13. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 8'01110000
Generating RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=8'01110000'.

4.26.14. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 8'01110000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=8'01110000'.

4.26.15. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Generating RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.16. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.17. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.18. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.19. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.20. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.21. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.22. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.23. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.24. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.25. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.26. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.27. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.28. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.29. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.30. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.31. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.32. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.33. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.34. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.35. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.36. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.37. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.38. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.39. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.40. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.41. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.42. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.43. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.44. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.45. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.46. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.47. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.48. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.49. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.50. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.51. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.52. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.53. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.54. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.55. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.56. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.57. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.58. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.59. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.60. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.61. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.62. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.63. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.64. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.65. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.66. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.67. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.68. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.69. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.70. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.71. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.72. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.73. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.74. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.75. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.76. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.77. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.78. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.79. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.80. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.81. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.82. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 8'10110000
Generating RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=8'10110000'.

4.26.83. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.84. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.85. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.86. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.87. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.88. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.89. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.90. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.91. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.92. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.93. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.94. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.95. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.96. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.97. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.98. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.99. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.100. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.101. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.102. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.103. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.104. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.105. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.106. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.107. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.108. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.109. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.110. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.111. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.112. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.113. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.114. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.115. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.116. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.117. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.118. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.119. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.120. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.121. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.122. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.123. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.124. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.125. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.126. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.127. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.128. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.129. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.130. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.131. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.132. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.133. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.134. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.135. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.136. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.137. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.138. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.139. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.140. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.141. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.142. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.143. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.144. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.145. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.146. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.147. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 8'10110000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=8'10110000'.

4.26.148. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.149. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.150. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.151. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.152. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.153. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.154. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.155. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.156. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.157. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.158. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.159. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.160. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.161. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.162. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.163. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.164. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.165. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.166. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.167. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.168. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.169. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.170. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.171. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.172. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.173. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.174. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.175. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.176. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.177. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.178. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.179. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.180. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.181. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.182. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.183. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.184. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.185. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.186. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.187. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.188. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.189. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.190. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.191. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.192. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.193. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.194. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.195. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.196. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.197. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.198. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.199. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.200. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.201. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.202. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.203. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.204. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.205. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.206. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.207. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.208. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.209. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.210. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.211. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1100101000000000
Generating RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1100101000000000'.

4.26.212. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1111100010001000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1111100010001000'.

4.26.213. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 8'11001010
Generating RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=8'11001010'.

4.26.214. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 8'11001010
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=8'11001010'.

4.27. Printing statistics.

=== wb_interconnect_2x2 ===

   Number of wires:                 68
   Number of wire bits:           2984
   Number of public wires:          58
   Number of public wire bits:    2974
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                216
     SB_DFFESR                       2
     SB_DFFSR                        2
     SB_LUT4                       212

4.28. Executing CHECK pass (checking for obvious problems).
checking module wb_interconnect_2x2..
Warning: Wire wb_interconnect_2x2.u_ic.s_arb[0].aw_arb.last_gnt has an unprocessed 'init' attribute.
Warning: Wire wb_interconnect_2x2.u_ic.s_arb[1].aw_arb.last_gnt has an unprocessed 'init' attribute.
found and reported 2 problems.

4.29. Executing BLIF backend.

4.30. Executing JSON backend.

5. Executing Verilog backend.
Dumping module `\wb_interconnect_2x2'.

Warnings: 13 unique messages, 15 total
End of script. Logfile hash: 4e3c5c6096
CPU: user 0.54s system 0.02s, MEM: 36.14 MB total, 19.03 MB resident
Yosys 0.8+ (git sha1 81ba464, gcc 7.3.0 -fPIC -Os)
Time spent: 16% 13x read_verilog (0 sec), 15% 16x opt_clean (0 sec), ...
make[1]: Leaving directory '/project/fun/featherweight-ip/fw-wishbone-interconnect/synth/wb_interconnect_2x2/rundir'
